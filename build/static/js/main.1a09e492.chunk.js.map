{"version":3,"sources":["reportWebVitals.js","Components/Subjects.js","utility.js","Components/CreateSessionForm.js","Components/UserCard.js","Components/Filters.js","Components/Dashboard.js","Components/Homepage.js","Components/LoginForm.js","Components/NavBar.js","Components/SessionListing.js","Components/SessionFilters.js","Components/UserSessions.js","Components/Profile.js","Components/SignUpForm.js","Components/EditUser.js","Components/EditSession.js","Hooks/socketContext.js","Components/Chat.js","Components/EmailRegistration.js","Components/PasswordReset.js","Components/UserTableListing.js","Components/AdminPortal.js","Components/Errors.js","Components/CreateSubject.js","AdminRouter.js","Components/Router.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Subjects","props","useState","subjects","setSubjects","useEffect","axios_instance","get","res","data","className","checkboxes","map","element","Form","Check","type","value","subject","label","name","onChange","onCheck","Dropdown","onSelect","eventKey","Toggle","variant","id","Menu","Item","parseDate","dateInput","date","Date","getMonth","getDate","getFullYear","parseTime","AMPM","getHours","getMinutes","verifyJWT","decoded","user","localStorage","getItem","jwt","verify","e","console","log","CreateSessionForm","history","useHistory","setDate","time","setTime","endTime","setEndTime","setSubject","user_list","set_user_list","other_user","setOtherUser","rls","includes","response","filter","username","catch","error","formatDateTime","hour","parseInt","substring","minutes","onSubmit","preventDefault","session","end_date","post","headers","push","err","Group","controlId","Label","selected","options","getOptionLabel","option","getOptionValue","_id","disabledDays","before","format","inputProps","required","onDayClick","day","undefined","selectedDays","disableClock","Button","UserCard","Card","Img","src","profile_picture","Body","Title","full_name","Text","bio","length","href","Filters","open","setOpen","nameFilter","emailFilter","usernameFilter","phoneFilter","roleFilter","subjectsFilter","availabilityFilter","setNameFilter","setEmailFilter","setUsernameFilter","setPhoneFilter","role","setRole","setSubjectsFilter","setAvailabilityFilter","inputChange","hookUpdateFunctions","target","userToken","filtered","users","userList","allChecks","toLowerCase","email","us_phone_number","startsWith","tutor_subjects","every","problem_subjects","roles","availability","foundSameDate","i","$date","availabilityCheck","setUsers","displayed","offset","perPage","slice","setRoleFilter","checked","onClick","aria-controls","aria-expanded","Collapse","in","Row","Col","FormControl","onDayChange","inline","Dashboard","setUserlist","setOffset","loading","setLoading","fullName","filters","setFilters","pageCount","Math","ceil","usernameCheck","subjectCheck","tutoring_subjects","typeCheck","fullNameCheck","userDash","biography","$oid","color","height","width","pageRangeDisplayed","marginPagesDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","previousLabel","nextLabel","breakLabel","HomePage","alt","rel","LoginForm","errors","setErrors","password","dataType","xhrFields","withCredentials","crossDomain","access_token","clear","setItem","window","location","reload","Control","placeholder","NavBar","setUsername","Navbar","collapseOnSelect","expand","to","Brand","Nav","style","display","Link","SessionListing","mode","tutor_confirmed","student_confirmed","confirmed","setConfirmed","tutor","student","end_time","confirmation","pathname","state","SessionFilters","tutorFilter","studentFilter","selectedDay","startDateFilter","startTimeFilter","minTime","endTimeFilter","sessionSubjectFilter","UserSessions","useParams","raw_sessions","displayed_sessions","sessions_list","set_sessions_list","month","formattedDate","filteredSessions","sessionDate","sameDate","startDateTime","endDateTime","sessionEndDate","config","sessions","Table","responsive","striped","bordered","hover","Profile","set_user","parsed_dates","milliseconds","onError","SignUpForm","dates","setDates","submitted","setSubmitted","bestSubjects","setBestSubjects","problemSubjects","setProblemSubjects","requiredFields","updateRole","errorChecker","indexOf","conditionalCheck","problem","errorList","errorCode","scrollTo","meeting_link","files","bodyFormData","FormData","append","axios","pattern","as","rows","returnedTypes","conditionalSubjectType","accept","arr","selectedIndex","findIndex","DateUtils","isSameDay","splice","EditUser","handleChange","updated_user","date_list","parsed_availability","edited_user","delete","EditSessionForm","setSession","edited_session","updated_session","socket","io","connect","SocketContext","React","createContext","Chat","useContext","recipient","messages","set_messages","handleReceiveMessage","useCallback","msg","replace","previous_messages","newArr","on","disconnect","Promise","resolve","reject","message_list","message","message_class","sender","timestamp","body","jwt_decode","emit","class","menuPortalTarget","document","querySelector","maxMenuHeight","classNamePrefix","EmailRegistration","useLocation","token","search","substr","setTimeout","PasswordReset","passwordEmailSent","setPasswordEmailSent","Authorization","new_pass","confirmNewPassword","confirm_new_pass","UserTableListing","hours","setHours","a","hoursFormatted","join","AdminPortal","setMode","setModeFilter","Errors","determineRendered","CreateSubject","newSubjects","AdminRouter","path","component","AppRouter","exact","render","match","params","Provider","create","baseURL","interceptors","request","use","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a09e492.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Dropdown, Form } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\"\nimport { axios_instance } from '../index'\n\nconst Subjects = (props) => {\n  const [subjects, setSubjects] = useState([])\n\n  useEffect(() => {\n    axios_instance.get(\"http://127.0.0.1:5000/subjects\")\n      .then((res) => {\n        setSubjects(res.data);\n      })\n  }, [])\n\n  const onDropdownSelect = (eventKey) => {\n    if (eventKey === props.subject) {\n      props.onSelect('')\n    }\n    else {\n      props.onSelect(eventKey)\n    }\n  }\n\n\n\n  return (\n    <div className=\"center\">\n      { props.checkboxes ? (\n        <div className=\"checkboxes subjects\">\n         { subjects.map((element) =>  <Form.Check type=\"checkbox\" key={element.subject}value={element.subject} label={element.subject} name=\"setSubjectsFilter\" onChange={props.onCheck} />)} \n        </div>\n      ) : (<Dropdown onSelect={onDropdownSelect}>\n        <Dropdown.Toggle variant=\"success\" className=\"subject\">\n          <span id=\"dropdown-subject\"> {props.subject ? props.subject : \"Subject\"}</span>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {subjects.map(element => (<Dropdown.Item eventKey={element.subject}><span>{element.subject}</span></Dropdown.Item>),)}\n        </Dropdown.Menu>\n      </Dropdown>)\n      }\n    </div>\n  )\n}\n\nexport default Subjects;","import jwt from 'jsonwebtoken'\n\nconst parseDate = (dateInput) => {\n  const date = new Date(dateInput);\n  return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + parseTime(dateInput);\n}\n\nconst parseTime = (dateInput) => {\n  const date = new Date(dateInput);\n  const AMPM = date.getHours() >= 12 ? \"PM\" : \"AM\";\n  return ((date.getHours() > 12 ? date.getHours() - 12 : date.getHours()) + \":\" + date.getMinutes() + \" \" + AMPM);\n}\n\n\nconst verifyJWT = () => {\n  let user = localStorage.getItem('token');\n  let decoded;\n  if (user) {\n    try {\n      decoded = jwt.verify(user, '/NJIBYUGHBYUHIKNBJBYBTGYIUJNBGFB/')\n    }\n    catch (e) {\n      console.log(e);\n      return null;\n    }\n    return decoded;\n  }\n  \n}\n\nexport {parseDate, parseTime,verifyJWT}\n","import React, { useEffect, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport TimePicker from 'react-time-picker'\nimport { useHistory } from 'react-router-dom'\nimport { axios_instance } from '..';\nimport Select from 'react-select';\nimport Subjects from './Subjects';\nimport { verifyJWT } from '../utility';\nimport \"../../node_modules/react-time-picker/dist/TimePicker.css\";\nimport \"../../node_modules/react-clock/dist/Clock.css\";\n\nconst CreateSessionForm = () => {\n\n  const history = useHistory();\n  const [date, setDate] = useState('')\n  const [time, setTime] = useState('')\n  const [endTime, setEndTime] = useState('')\n  const [subject, setSubject] = useState('')\n  const [user_list, set_user_list] = useState([])\n  const [other_user, setOtherUser] = useState({})\n  const [errors, setErrors] = useState('')\n\n  const jwt = verifyJWT();\n  useEffect(() => {\n    if (jwt.rls.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then(function (response) {\n          return response.data.filter(user => user.username != jwt.username)\n        })\n        .then(function (response) {\n          console.log(response)\n          set_user_list([...user_list, ...response])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    if (jwt.rls.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then(function (response) {\n          return response.data.filter(user => user.username != jwt.username)\n        })\n        .then(function (response) {\n          set_user_list([...user_list, ...response])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const session = {\n      subject: subject,\n      date: formatDateTime(date, time),\n      end_date: formatDateTime(date, endTime),\n      other_user: other_user\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    axios_instance.post('http://127.0.0.1:5000/user/sessions/new', session, config)\n      .then((res) => {\n        history.push(`/user/${jwt.username}`)\n      }).catch((err) => {\n        console.log(err)\n      })\n\n\n  }\n\n  const handleDayClick = (day, { selected }) => {\n    const selectedDay = selected ? undefined : day;\n    setDate(selectedDay)\n  }\n\n  const handleSelect = (selected) => {\n    setOtherUser(selected)\n  }\n\n  const onTimeChange = (time) => {\n    setTime(time)\n  }\n\n  const onEndTimeChange = (time) => {\n    setEndTime(time)\n  }\n  const formatDateTime = (date, time) => {\n    const hour = parseInt(time.substring(0, 1)) == 0 ? parseInt(time.substring(1, 2)) : parseInt(time.substring(0, 2))\n    const minutes = time.substring(2)\n    const amPM = hour < 12 ? 'AM' : 'PM'\n    const formatted_hour = hour > 12 ? hour - 12 : hour;\n    time = formatted_hour + minutes + \" \" + amPM\n    return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + time;\n  }\n\n\n\n  return (\n    <div className=\"form-comp\">\n      <h1>Set up a Session</h1>\n      <Form onSubmit={handleSubmit}>\n        <Subjects subject={subject} onSelect={setSubject} />\n\n        <Form.Group controlId=\"session_attendee\">\n          <Form.Label>{jwt.rls.includes('tutor') ? 'Student' : 'Tutor'}</Form.Label>\n          <Select\n            className=\"select center\"\n            onChange={handleSelect}\n            options={user_list}\n            getOptionLabel={(option) => option.username}\n            getOptionValue={(option) => option._id}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label className=\"block-label\">Date</Form.Label>\n          <div>\n            <DayPickerInput\n              className=\"calendar\"\n              disabledDays={{ before: new Date() }}\n              format=\"M/D/YYYY\"\n              name=\"date\"\n              id=\"date\"\n              inputProps={\n                { required: true }\n              } \n              onDayClick={handleDayClick}\n              selectedDays={date}\n            />\n          </div>\n        </Form.Group>\n\n        <div>\n          <Form.Label className=\"block-label\">Start Time: </Form.Label>\n          <TimePicker\n            name=\"time\"\n            id=\"time\"\n            required={true}\n            disableClock={true}\n            onChange={onTimeChange}\n            value={time}\n          />\n\n\n\n          <Form.Label className=\"block-label\">End Time: </Form.Label>\n          <TimePicker\n            name=\"end_time\"\n            id=\"end_time\"\n            required={true}\n            disableClock={true}\n            onChange={onEndTimeChange}\n            value={endTime}\n          />\n        </div>\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    </div>);\n}\n\nexport default CreateSessionForm;","import React from 'react'\nimport { Card, Button } from 'react-bootstrap';\n\n//I want to keep same top image ratio\nconst UserCard = (props)  => {\n    return (\n<Card className=\"card user_card wide_card\" >\n    <Card.Img className=\"card-image\" variant=\"top\" src={props.profile_picture ?`http://localhost:5000/${props.profile_picture}` : 'http://localhost:5000/profile_pictures/placeholder.jpg'}/>\n    <Card.Body>\n      <Card.Title>{props.full_name}</Card.Title>\n      <Card.Text>\n        {props.bio.length >=20 ? <span className=\"card-body-text\">{props.bio.substring(20)}...</span>: <span className=\"card-body-text\">{props.bio}</span>}\n      </Card.Text>\n      <Button variant=\"primary\" href={`/user/${props.username}`}>Profile</Button>\n    </Card.Body>\n  </Card>)\n}\n\nexport default UserCard;","import { useState, useEffect } from 'react';\nimport { Form, FormControl, Collapse, Button, Dropdown, Col, Row, Pagination } from 'react-bootstrap'\nimport jwt from 'jsonwebtoken';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport Subjects from '../Components/Subjects'\nconst Filters = (props) => {\n    const [open, setOpen] = useState(false);\n\n    const [filter, setFilter] = useState({\n        nameFilter: '',\n        emailFilter: '',\n        usernameFilter: '',\n        phoneFilter: '',\n        roleFilter: '',\n        subjectsFilter: [],\n        availabilityFilter: null\n    })\n    //This will replace the long string of use states later\n    const [nameFilter, setNameFilter] = useState('');\n    const [emailFilter, setEmailFilter] = useState('');\n    const [usernameFilter, setUsernameFilter] = useState('');\n    const [phoneFilter, setPhoneFilter] = useState('');\n    const [role, setRole] = useState('');\n    const [subjectsFilter, setSubjectsFilter] = useState([]);\n    const [availabilityFilter, setAvailabilityFilter] = useState(null);\n    //USER availability not defined\n    // not working subjects filter\n    //\n\n    const inputChange = (e) => {\n        hookUpdateFunctions[e.target.name](e.target.value)\n    }\n\n    let userToken = localStorage.getItem('token');\n    let decoded;\n    if (userToken) {\n        try {\n            decoded = jwt.verify(userToken, '/NJIBYUGHBYUHIKNBJBYBTGYIUJNBGFB/')\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    const handleDayClick = (day, { selected }) => {\n        const selectedDay = selected ? undefined : day;\n        setAvailabilityFilter(selectedDay);\n    }\n\n    const availabilityCheck = (user) => {\n        let foundSameDate = false;\n        let i = 0;\n\n        while (!foundSameDate && i < user.availability.length) {\n            const date = new Date(user.availability[i++].$date);\n            foundSameDate = availabilityFilter.getDate() == date.getDate()\n                && availabilityFilter.getFullYear() == date.getFullYear()\n                && availabilityFilter.getMonth() == date.getMonth();\n        }\n\n        return foundSameDate;\n    }\n\n    useEffect(() => {\n        const filtered = props.users.userList.filter((user) => {\n\n            let allChecks = true;\n\n            allChecks = nameFilter ? (user.full_name.toLowerCase().includes(nameFilter.toLowerCase()) ? allChecks : false) : allChecks;\n\n            allChecks = emailFilter ? (user.email.toLowerCase().includes(emailFilter.toLowerCase()) ? allChecks : false) : allChecks;\n\n            allChecks = phoneFilter ? (user.us_phone_number.startsWith(phoneFilter) ? allChecks : false) : allChecks;\n\n            allChecks = subjectsFilter.length !== 0 ? ((user.tutor_subjects &&\n                subjectsFilter.every((element) => user.tutor_subjects.includes(element)))\n                || (user.problem_subjects && subjectsFilter.every((element) => user.problem_subjects.includes(element))) ? allChecks : false) : allChecks;\n\n            allChecks = usernameFilter ? (user.username.toLowerCase().includes(usernameFilter.toLowerCase()) ? allChecks : false) : allChecks;\n\n            allChecks = role ? (user.roles.includes(role) ? allChecks : false) : allChecks;\n\n            allChecks = availabilityFilter && user.availability ? (availabilityCheck(user) ? allChecks : false) : allChecks;\n            return allChecks;\n        })\n\n\n        props.setUsers({ ...props.users, filtered: filtered, displayed: (props.offset + props.perPage >= filtered.length ? filtered.slice(props.offset, filtered.length) : filtered.slice(props.offset, props.offset + props.perPage)) })\n\n    }, [nameFilter, emailFilter, usernameFilter, phoneFilter, role, subjectsFilter, availabilityFilter])\n\n\n    const setCheckFilter = (value) => {\n        if (subjectsFilter.includes(value)) {\n            setSubjectsFilter(subjectsFilter.filter(element => element != value));\n        }\n        else {\n            setSubjectsFilter([...subjectsFilter, value])\n        }\n    }\n\n    const setRoleFilter = (e) => {\n        if (e.target.value === role) {\n            e.target.checked = false;\n            setRole(\"\");\n        }\n        else {\n            setRole(e.target.value);\n        }\n    }\n\n    const hookUpdateFunctions = {\n        \"setNameFilter\": setNameFilter,\n        \"setEmailFilter\": setEmailFilter,\n        \"setUsernameFilter\": setUsernameFilter,\n        \"setPhoneFilter\": setPhoneFilter,\n        \"setRoleFilter\": setRoleFilter,\n        \"setSubjectsFilter\": setCheckFilter,\n    }\n    return (\n        <div className=\"filtering\">\n            <Button\n\t\t\t\tid=\"open-filters\"\n                onClick={() => setOpen(!open)}\n                aria-controls=\"filter-form\"\n                aria-expanded={open}\n            >\n                Filter\n      </Button>\n            <Collapse in={open}>\n                <div id=\"filter-form\" >\n                    <Form className=\"form-comp\">\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Name</Form.Label>\n                                    <FormControl className=\"search-input\" type=\"text\" name=\"setNameFilter\" onChange={inputChange} />\n                                    {decoded.rls.includes('admin') && (<div>\n                                        <Form.Label>Email</Form.Label>\n                                        <FormControl className=\"search-input\" type=\"text\" name=\"setEmailFilter\" onChange={inputChange} />\n                                    </div>)}\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Label>Username</Form.Label>\n                                <FormControl className=\"search-input\" type=\"text\" name=\"setUsernameFilter\" onChange={inputChange} />\n\n                                {decoded.rls.includes('admin') && (<div>\n                                    <Form.Label>Phone # (Stored in format xxx-xxx-xxxx)</Form.Label>\n                                    <FormControl className=\"search-input\" type=\"text\" name=\"setPhoneFilter\" onChange={inputChange} />\n                                </div>)}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Subjects checkboxes={true} name=\"setSubjectsFilter\" onCheck={inputChange} />\n                        </Row>\n                        <Row>\n\n                            <DayPickerInput\n                                className=\"calendar\"\n                                format=\"M/D/YYYY\"\n                                name=\"setStartDateFilter\"\n                                id=\"date\"\n                                onDayChange={handleDayClick}\n                                value={availabilityFilter}\n                            />\n                        </Row>\n                        <Row>\n                            <Form.Group className=\"radios\" controlId=\"role\">\n                                <Form.Check\n                                    inline\n                                    value=\"tutor\"\n                                    name=\"setRoleFilter\"\n                                    label=\"Tutor\"\n                                    type=\"radio\"\n                                    id=\"tutor\"\n                                    onClick={setRoleFilter}\n                                />\n                                <Form.Check\n                                    inline\n                                    value=\"student\"\n                                    name=\"setRoleFilter\"\n                                    label=\"Student\"\n                                    type=\"radio\"\n                                    id=\"student\"\n                                    onClick={setRoleFilter}\n                                />\n                                <Form.Check\n                                    inline\n                                    value=\"student,tutor\"\n                                    name=\"setRoleFilter\"\n                                    label=\"Both\"\n                                    type=\"radio\"\n                                    id=\"both\"\n                                    onClick={setRoleFilter}\n                                />\n                            </Form.Group>\n                        </Row>\n                    </Form>\n                </div>\n            </Collapse>\n        </div>)\n}\n\n\nexport default Filters;","import React, { useState, useEffect } from 'react'\nimport { axios_instance } from '..'\nimport UserCard from './UserCard'\nimport ReactPaginate from 'react-paginate'\nimport { Form } from 'react-bootstrap'\nimport ReactLoading from 'react-loading';\nimport Filters from './Filters'\nimport {verifyJWT} from '../utility'\n//Add support for som1 who is tutor + student\nconst Dashboard = (props) => {\n  const jwt = verifyJWT();\n  const [userList, setUserlist] = useState({\n    userList: [],\n    filtered: [],\n    displayed: []\n  })\n\n  const [offset, setOffset] = useState(0)\n  const [loading, setLoading] = useState(true);\n\n  const [filters, setFilters] = useState({\n    username: '',\n    fullName: '',\n    subject: '',\n    type: ''\n  })\n\n  const perPage = 20;\n  const pageCount = Math.ceil(userList.userList.length) / perPage;\n\n\n  useEffect(() => {\n    const filtered = userList.userList.filter((user) => {\n      setLoading(true);\n      const usernameCheck = user.username.toLowerCase().includes(filters.username);\n      const subjectCheck = user.roles.includes(\"tutor\") && user.tutoring_subjects ? user.tutoring_subjects.includes(filters.subject) : user.problem_subjects ? user.problem_subjects.includes(filters.subject) : false;\n      const typeCheck = user.roles.includes(filters.type);\n      const fullNameCheck = user.full_name.toLowerCase().includes(filters.fullName.toLowerCase());\n      let allChecks = true;\n\n      if (filters.username) {\n        allChecks = allChecks && usernameCheck;\n      }\n      if (filters.subject) {\n        allChecks = allChecks && subjectCheck;\n      }\n      if (filters.fullName) {\n        allChecks = allChecks && fullNameCheck;\n      }\n      if (filters.type) {\n        allChecks = allChecks && typeCheck;\n      }\n      return allChecks\n    })\n    setLoading(false);\n    setUserlist({ ...userList, filtered: filtered, displayed: filtered.slice(0, perPage) })\n  }, [filters])\n\n\n  useEffect(() => {\n    if (jwt && jwt.rls.includes('student') && jwt.rls.includes('tutor') || jwt.rls.includes('admin')) {\n      axios_instance.get('http://127.0.0.1:5000/user')\n        .then((res) => {\n          return res.data.filter(user => user.username != props.username)\n        })\n        .then((response) => {\n          setUserlist({ ...userList, userList: response, filtered: response, displayed: response.slice(0, perPage) })\n        })\n        .then(() => {\n          setLoading(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    else if (jwt && jwt.rls.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then((res) => {\n          return res.data.filter(user => user.username != props.username)\n        })\n        .then(function (response) {\n          setUserlist({ ...userList, userList: response, filtered: response, displayed: response.slice(0, perPage) })\n        })\n        .then(() => {\n          setLoading(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    else if (jwt && jwt.rls.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then((res) => {\n          return res.data.filter(user => user.username != jwt.username)\n        })\n        .then(function (response) {\n          setUserlist({ ...userList, userList: response, filtered: response, displayed: response.slice(0, perPage) })\n        })\n        .then(() => {\n          setLoading(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [])\n\n\n\n  const handlePageClick = (e) => {\n    let selected = e.selected;\n    setOffset(Math.ceil(selected * perPage));\n    setUserlist({ ...userList, displayed: perPage >= userList.filtered.length ? userList.filtered.slice(offset, userList.filtered.length) : userList.filtered.slice(offset, offset + 2) })\n  };\n\n\n  const userDash = userList.displayed.map((user) => {\n    return (\n      <UserCard className=\"user_card\" profile_picture = {user.profile_picture} key={user._id.$oid} full_name={user.full_name} username={user.username} bio={user.biography} />\n    )\n  })\n\n  const setRoleFilter = (e) => {\n    setFilters({ ...filters, type: e.target.value })\n  }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <div>\n        <Filters users={userList} offset={offset} perPage={perPage} setUsers={setUserlist} />\n        {\n          jwt.rls.includes(\"tutor\") && jwt.rls.includes(\"student\") ? (\n            <Form className=\"form-comp\">\n              <Form.Group controlId=\"role\">\n                <Form.Check\n                  inline\n                  value=\"tutor\"\n                  name=\"role\"\n                  label=\"Tutor\"\n                  type=\"radio\"\n                  id=\"tutor\"\n                  onClick={setRoleFilter}\n                />\n                <Form.Check\n                  inline\n                  value=\"student\"\n                  name=\"role\"\n                  label=\"Student\"\n                  type=\"radio\"\n                  id=\"student\"\n                  onClick={setRoleFilter}\n                />\n              </Form.Group>\n              </Form>) : null\n         \n}\n      </div>\n\n      {loading && <ReactLoading type={\"spin\"} color={\"white\"} height={'10%'} width={'10%'} className=\"loading_spinner\" />}\n      {userDash.length != 0 ? <div className=\"userdash\">{userDash}</div> : <h3>No matching users found</h3>}\n\n\n      <ReactPaginate\n        pageCount={pageCount}\n        pageRangeDisplayed={5}\n        marginPagesDisplayed={5}\n        onPageChange={handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n        previousLabel={'Previous'}\n        nextLabel={'Next'}\n        breakLabel={'...'}\n      />\n\n    </div >\n  )\n}\n\n\nexport default Dashboard;","import React from 'react';\nimport '../component_styling/homepage.scss';\nfunction HomePage() {\n\n\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <img src=\"/brain.png\" alt=\"logo\" />\n        <h1 className=\"fade-in\">JMSA Tutoring Services</h1>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n        </a>\n      </header>\n\n      <section className=\"align-odd\">\n        <h2>About Us</h2>\n        <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In lacinia justo vitae sapien laoreet suscipit. Cras eu justo vel turpis convallis pretium non ac nibh. Suspendisse nibh ante, luctus sed tellus ac, auctor lacinia orci. Curabitur et elit ac lectus accumsan rhoncus. Etiam faucibus sit amet felis ut eleifend. Phasellus quis rhoncus augue. Sed ac lectus pellentesque, dictum eros eu, blandit sapien. Fusce eget pretium erat, quis accumsan velit. Morbi vel libero a nunc commodo vehicula ac non elit. Quisque placerat et quam vel sagittis. Aenean ac dui vestibulum, sollicitudin ipsum et, pretium nulla.\n\nMaecenas eget bibendum purus. Nam faucibus metus nec commodo cursus. Sed vehicula porttitor sem at porta. Fusce sodales id quam sed elementum. Suspendisse vel orci ut eros sagittis rhoncus ac non sem. Proin rutrum laoreet libero, at lacinia ex elementum non. Etiam imperdiet quis mi at blandit. \n        </p>\n      </section>\n\n    </div>\n  );\n}\n\n\n<footer>\n<a href='https://pngtree.com/free-backgrounds'>free background photos from pngtree.com</a>\n</footer>\nexport default HomePage;\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { axios_instance } from '../index'\nimport { useHistory } from \"react-router-dom\";\nimport jwt from 'jsonwebtoken'\nconst LoginForm = (props) => {\n  let history = useHistory();\n  let [errors, setErrors] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const username = e.target.username.value;\n    const password = e.target.password.value;\n\n    const user = {\n      username,\n      password\n    }\n\n    const config = {\n      dataType: 'json',\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n\n    axios_instance.post('/user/sign_in', user, config)\n      .then(function (response) {\n        if (response.data.access_token) {\n          jwt.verify(response.data.access_token, '/NJIBYUGHBYUHIKNBJBYBTGYIUJNBGFB/', () => {\n            localStorage.clear()\n            localStorage.setItem(\"token\", response.data.access_token);\n            history.push(\"/\")\n            window.location.reload(true)\n          })\n        }\n      })\n      .catch(function (error) {\n        setErrors('Invalid credentials')\n        console.log('err, ', error);\n      });\n  }\n\n  return (\n    <div className=\"form-comp\">\n      <h1>Log in </h1>\n      <Form onSubmit={handleSubmit}>\n        {errors || ''}\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Username\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" />\n        </Form.Group>\n        <span>Forgot password? Click<a href=\"/reset_password\"> Here</a></span>\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    </div>);\n}\n\n\n\nexport default LoginForm;","import React, {useState} from 'react';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport {Link, useHistory} from 'react-router-dom'\nimport {verifyJWT} from '../utility'\nconst NavBar = (props) => {\n    const jwt = verifyJWT()\n    const [username, setUsername] = useState(jwt && jwt.username)\n    const history = useHistory();\n    const logout = (e) =>{\n        e.preventDefault();\n        localStorage.clear()\n        history.push(\"/\")\n        setUsername(undefined)\n    }\n    \n \n    return (\n        <Navbar className=\"navbar\" collapseOnSelect expand=\"lg\" variant=\"dark\">\n            <LinkContainer to=\"/\">\n                <Navbar.Brand>JMSA Tutoring</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav>\n                   {username ? (\n                       <div >\n                    <LinkContainer style={{display:\"inline\"}} to=\"/dashboard\">\n                        <Nav.Link style={{display:\"inline\"}}> Dashboard</Nav.Link>\n                    </LinkContainer>\n                        <LinkContainer style={{display:\"inline\"}} to=\"/user/create_session\">\n                            <Nav.Link style={{display:\"inline\"}}>Create Session</Nav.Link>\n                        </LinkContainer>\n\n                        <LinkContainer style={{display:\"inline\"}} to={`/user/${username}/chat`}>\n                            <Nav.Link style={{display:\"inline\"}}>Chat</Nav.Link>\n                        </LinkContainer>\n\n                        <Navbar.Text style={{display:\"inline\"}}>Signed in as:\n                            <LinkContainer style={{display:\"inline\"}} to={`/user/${username}`}>\n                            <Nav.Link style={{display:\"inline\"}}>{username}</Nav.Link>\n                           </LinkContainer>\n                        </Navbar.Text>\n\n                        <Link to={'/'} style={{display:\"inline\"}} onClick={logout}>\n                            <Nav.Link style={{display:\"inline\"}}>Logout</Nav.Link>\n                        </Link>\n                       </div>) : (\n                    <div>\n                        <LinkContainer style={{display:\"inline\"}} to=\"/sign_in\">\n                            <Nav.Link>Login</Nav.Link>\n                        </LinkContainer>\n\n                        <LinkContainer style={{display:\"inline\"}} to=\"/sign_up\">\n                            <Nav.Link>Sign Up</Nav.Link>\n                        </LinkContainer>\n                    </div>)}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom'\nimport { Card, Button } from 'react-bootstrap';\nimport { parseDate, parseTime, verifyJWT } from '../utility'\nimport {axios_instance} from '../index'\nconst SessionListing = (props) => {\n  //wrong time\n  const mode = props.mode;\n  const jwt = verifyJWT();\n  const [confirmed, setConfirmed] = useState({\n\t  tutor_confirmed: props.session.tutor_confirmed,\n\t  student_confirmed: props.session.student_confirmed\n  });\n\n  if(jwt.username==props.session.tutor.username && !confirmed.tutor_confirmed){\n    console.log(\"T\")\n  }\n  else if ((jwt.username==props.session.student.username && !confirmed.student_confirmed)){\n    console.log(\"S\")\n  }\n\n  const confirmSession = () => {\n    let confirmation = {};\n    if(jwt.username==props.session.tutor.username){\n      confirmation.tutor_confirmed = true;\n    }\n    else if(jwt.username==props.session.student.username){\n      confirmation.student_confirmed = true;\n    }\n    axios_instance.post(`/user/sessions/${props.session._id.$oid}/edit`, confirmation)\n    .then((res)=>{\n     setConfirmed({tutor_confirmed: res.data.tutor_confirmed, student_confirmed: res.data.student_confirmed});\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n\n  //add captcha\n  return (\n    props.mode === \"card\" ?\n      (<div className=\"center\">\n        <Card className=\"card session\">\n          <Card.Body>\n            <Card.Title className=\"card-title\">{props.session.subject} Session with Student @{props.session.student.username}</Card.Title>\n            <Card.Text>\n              <span id=\"tutor\">Tutor: @{props.session.tutor.username}</span>\n              <p id=\"date\">{\n                parseDate(props.session.date.$date)\n              } to <span id=\"end_time\">{parseTime(props.session.end_time.$date)}</span></p>\n              <p>Confirmation Status: {(confirmed.tutor_confirmed && confirmed.student_confirmed) ? \"Confirmed\" : \"Not Confirmed\"} </p>\n\n              {\n                ((jwt.username==props.session.tutor.username && !confirmed.tutor_confirmed) || (jwt.username==props.session.student.username && !confirmed.student_confirmed)) && <a className=\"delete-link\" onClick={confirmSession}>Confirm</a>\n              }\n            </Card.Text>\n            <Link to={{\n              pathname: `/user/sessions/${props.session._id.$oid}/edit`,\n              state: {\n\n                session: props.session\n              }\n            }}>Edit\n        </Link>\n          </Card.Body>\n        </Card>\n      </div>) : (\n        <tr>\n          <td>{props.session.student.username}</td>\n          <td>{props.session.tutor.username}</td>\n          <td>{props.session.subject}</td>\n          <td>{parseDate(props.session.date.$date)}</td>\n          <td>{parseTime(props.session.end_time.$date)}</td>\n        </tr>)\n  )\n\n}\n\nexport default SessionListing;","import { useState, useEffect } from 'react';\nimport { Form, FormControl, Dropdown, Col, Row, Pagination } from 'react-bootstrap'\nimport TimePicker from 'react-time-picker';\nimport DayPicker from 'react-day-picker';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport Subjects from './Subjects'\n\nconst SessionFilters = (props) => {\n    const setTutorFilter = (e) => {\n        props.setFilters({ ...props.filters, tutorFilter: e.target.value });\n    }\n\n    const setStudentFilter = (e) => {\n        props.setFilters({ ...props.filters, studentFilter: e.target.value });\n    }\n\n    const handleDayClick = (day, { selected }) => {\n        const selectedDay = selected ? undefined : day;\n        props.setFilters({ ...props.filters, startDateFilter: selectedDay });\n    }\n\n    const setStartTimeFilter = (time) => {\n        props.setFilters({ ...props.filters, startTimeFilter: time });\n    }\n\n    const setEndTimeFilter = (time) => {\n        props.setFilters({ ...props.filters, endTimeFilter: time });\n    }\n\n    const setSubjectFilter = (eventKey) => {\n        props.setFilters({ ...props.filters, sessionSubjectFilter: eventKey })\n    }\n\n    return (\n        <Form className=\"form-comp\">\n            <Form.Group>\n                <Form.Label>Tutor Filter</Form.Label>\n                <FormControl className=\"search-input short\" type=\"text\" name=\"setTutorFilter\" onChange={setTutorFilter} />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Student Filter</Form.Label>\n                <FormControl className=\"search-input short\" type=\"text\" name=\"setDateFilter\" onChange={setStudentFilter} />\n            </Form.Group>\n            <div className=\"flex-form\">\n                <Form.Group>\n                    <Form.Label>Date Filter</Form.Label>\n                    <DayPickerInput\n                        className=\"calendar\"\n                        format=\"M/D/YYYY\"\n                        name=\"setStartDateFilter\"\n                        id=\"date\"\n                        onDayChange={handleDayClick}\n                        value={props.filters.startDateFilter}\n                    />\n                </Form.Group>\n\n                {props.filters.startDateFilter &&\n                    (\n                        <div >\n                            <Form.Group>\n                                <Form.Label>Start Time Filter</Form.Label>\n                                <TimePicker\n                                    name=\"setTimePicker\"\n                                    id=\"end_time\"\n                                    onChange={setStartTimeFilter}\n                                    value={props.filters.startTimeFilter}\n                                    disableClock={true}\n                                />\n                                <Form.Label>End Time Filter</Form.Label>\n                                <TimePicker\n                                    name=\"setTimePicker\"\n                                    id=\"end_time\"\n                                    minTime={props.filters.startTimeFilter}\n                                    value={props.filters.endTimeFilter}\n                                    onChange={setEndTimeFilter}\n                                    disableClock={true}\n                                />\n                            </Form.Group>\n                        </div>\n                    )\n                }\n                <Subjects onSelect={setSubjectFilter} subject={props.filters.sessionSubjectFilter}/>\n            </div>\n        </Form>\n    )\n\n}\n\nexport default SessionFilters;","import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { axios_instance } from '..'\nimport {Table} from 'react-bootstrap'\nimport SessionListing from './SessionListing';\nimport SessionFilters from './SessionFilters'\nimport ReactPaginate from 'react-paginate'\n\nconst UserSessions = (props) => {\n    let { username } = useParams();\n    const perPage = props.perPage ? props.perPage : 1;\n    const [sessions_list, set_sessions_list] = useState({\n        raw_sessions: [],\n        displayed_sessions: [],\n        filtered: []\n    })\n    //Filtered is not neeeded with offset\n    //Put session list in var and change it when offset state changes\n    const [offset, setOffset] = useState(0)\n    const [filters, setFilters] = useState({\n        tutorFilter: '',\n        studentFilter: '',\n        sessionSubjectFilter: '',\n        startDateFilter: null,\n        startTimeFilter: null,\n        endTimeFilter: null\n    })\n    const pageCount = Math.ceil(sessions_list.filtered.length) / perPage;\n\n    const formatDateTime = (date, time) => {\n        const month = date.getMonth() < 10 ? \"0\" + (date.getMonth() + 1) : (date.getMonth() + 1);\n        const day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n        const formattedDate = date.getFullYear() + \"-\" + month + \"-\" + day;\n        const formattedTime = \"T\" + time + \":00\"\n        return new Date(formattedDate + formattedTime);\n    }\n\n    useEffect(() => {\n        const filteredSessions = sessions_list.raw_sessions.filter((session) => {\n            let allChecks = true;\n            allChecks = filters.tutorFilter ? (session.tutor.username.includes(filters.tutorFilter) ? allChecks : false) : allChecks;\n            allChecks = filters.studentFilter ? (session.student.username.includes(filters.studentFilter) ? allChecks : false) : allChecks;\n            if (filters.startDateFilter) {\n                const sessionDate = new Date(session.date.$date);\n                const sameDate = filters.startDateFilter.getDate() === sessionDate.getDate()\n                    && filters.startDateFilter.getFullYear() === sessionDate.getFullYear()\n                    && filters.startDateFilter.getMonth() === sessionDate.getMonth();\n                allChecks = sameDate ? allChecks : false\n\n                if (filters.startTimeFilter) {\n                    const startDateTime = formatDateTime(filters.startDateFilter, filters.startTimeFilter);\n                    allChecks = sameDate && startDateTime.getHours() === sessionDate.getHours() && startDateTime.getMinutes() === sessionDate.getMinutes() ? allChecks : false\n                }\n\n                if (filters.endTimeFilter) {\n                    const endDateTime = formatDateTime(filters.startDateFilter, filters.endTimeFilter);\n                    const sessionEndDate = new Date(session.end_time.$date)\n                    allChecks = sameDate && endDateTime.getHours() === sessionEndDate.getHours() && endDateTime.getMinutes() === sessionEndDate.getMinutes() ? allChecks : false\n                }\n            }\n            allChecks = filters.sessionSubjectFilter ? (filters.sessionSubjectFilter === session.subject ? allChecks : false) : allChecks;\n            return allChecks;\n\n        })\n\n        set_sessions_list({ ...sessions_list, displayed_sessions: perPage >= filteredSessions.length ? filteredSessions.slice(offset, filteredSessions.length) : filteredSessions.slice(offset, offset + perPage), filtered: filteredSessions })\n    }, [filters.studentFilter, filters.tutorFilter, filters.startDateFilter, filters.startTimeFilter, filters.endTimeFilter, filters.sessionSubjectFilter])\n\n\n\n\n    useEffect(() => {\n        const config = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n        if (username) {\n            axios_instance.get(`http://127.0.0.1:5000/user/${username}/sessions`, config)\n                .then((res) => {\n                    console.log(res.data)\n                    set_sessions_list({\n                        raw_sessions: res.data,\n                        displayed_sessions: res.data.slice(0, perPage),\n                        filtered: res.data\n                    })\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n        else {\n            axios_instance.get(`http://127.0.0.1:5000/sessions`, config)\n                .then((res) => {\n                    set_sessions_list({\n                        raw_sessions: res.data,\n                        displayed_sessions: res.data.slice(0, perPage),\n                        filtered: res.data\n                    })\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n    }, [])\n\n    //Update display when page clicked\n    useEffect(() => {\n        set_sessions_list({ ...sessions_list, displayed_sessions: offset + perPage >= sessions_list.filtered.length ? sessions_list.filtered.slice(offset, sessions_list.filtered.length) : sessions_list.filtered.slice(offset, offset + perPage) })\n    }, [offset])\n\n    const handlePageClick = (e) => {\n        let selected = e.selected;\n        setOffset(Math.ceil(selected * perPage));\n    };\n\n    const sessions = sessions_list.displayed_sessions.map((session) => (\n        <SessionListing key={session._id.$oid} session={session} mode={!username ? \"listing\" : \"card\"} />\n    ))\n\n    return (\n        <div>\n            <div>\n                {!username && <SessionFilters sessions={sessions_list.raw_sessions} filters={filters} setFilters={setFilters} />}\n                {sessions.length !== 0 ? !username ? (\n                    <Table responsive striped bordered hover variant=\"dark\">\n                        <thead>\n                            <tr>\n                                <th>Student</th>\n                                <th>Tutor</th>\n                                <th>Subject</th>\n                                <th>Start Time</th>\n                                <th>End Time</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {sessions}\n                            </tbody>\n                    </Table>\n                ) : sessions : <h3>No sessions scheduled</h3>}\n            </div>\n            <ReactPaginate\n                pageCount={pageCount}\n                pageRangeDisplayed={5}\n                marginPagesDisplayed={5}\n                onPageChange={handlePageClick}\n                containerClassName={'pagination'}\n                subContainerClassName={'pages pagination'}\n                activeClassName={'active'}\n                previousLabel={'Previous'}\n                nextLabel={'Next'}\n                breakLabel={'...'}\n            />\n        </div>\n    )\n}\n\nexport default UserSessions;","import React, { useEffect, useState } from 'react'\nimport { Link, useParams } from \"react-router-dom\";\nimport { axios_instance } from '../index'\nimport DayPicker from \"react-day-picker\";\nimport UserSessions from './UserSessions';\nimport { Row, Col, Container } from 'react-bootstrap'\nimport ReactLoading from 'react-loading';\nimport { verifyJWT } from '../utility';\nimport axios from 'axios';\n//View for viewing own profile and someone else viewing profile\nconst Profile = () => {\n    let { username } = useParams();\n    const [user, set_user] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    const jwt = verifyJWT();\n\n    useEffect(() => {\n        const config = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n\n        axios_instance.get(`/user/${username}`, config)\n            .then((res) => {\n                const parsed_dates = res.data.availability.map((date) => {\n                    const milliseconds = date.$date;\n                    const parsed_date = new Date(milliseconds)\n                    return parsed_date;\n                })\n                res.data.availability = parsed_dates;\n                set_user(res.data);\n\t\t\t\tconsole.log(res.data)\n            })\n            .then(() => {\n                setLoading(false);\n            })\n    }, [])\n\n    const addDefaultSrc = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        e.target.src = `http://localhost:5000/profile_pictures/placeholder.jpg`\n    }\n    return (\n        <div>\n            <div>\n                {loading && <ReactLoading type={\"spin\"} color={\"white\"} height={'10%'} width={'10%'} className=\"loading_spinner\" />}\n                <h1>{user.full_name}</h1>\n                {user.profile_picture ? <img className=\"profile_picture\" src={`http://localhost:5000/${user.profile_picture}`} onError={addDefaultSrc} alt=\"Profile Picture\"></img> : <img className=\"profile_picture\" src=\"http://localhost:5000/profile_pictures/placeholder.jpg\"></img>}\n                <h2 className=\"subtitle\">@{username}</h2>\n                <p>{username != jwt.username && <Link to={{ pathname: `/user/${jwt.username}/chat` }}>Chat</Link>}</p>\n                {\n                    (username == jwt.username || jwt.rls.includes('admin')) && (\n                        <Link to={{\n                            pathname: `/user/${username}/edit`,\n                            state: {\n                                user: {\n                                    ...user\n                                }\n                            }\n                        }}>Edit\n                        </Link>)\n                }\n                <div className=\"about-div\">\n                    <p className=\"bio\">{user.biography}</p>\n                </div>\n                <hr />\n\n                {jwt && username == jwt.username || jwt.rls.includes('admin') ?\n                        <div className=\"profile-items\">\n                            <div className=\"calendar-container\">\n                                <h3>Availability</h3>\n                                <DayPicker\n                                    className=\"calendar\"\n                                    format=\"MM/DD/YYYY\"\n                                    selectedDays={user.availability}\n                                    name=\"availability\"\n                                />\n                            </div>\n                            <div className=\"user_sessions\">\n                                {(username == jwt.username || jwt.rls.includes('admin')) ? <div><h3>Sessions</h3><UserSessions /></div> : ''}\n                            </div>\n                        </div>\n                    : <div>\n                        <h3>Availability</h3>\n                        <DayPicker\n                            className=\"calendar\"\n                            format=\"MM/DD/YYYY\"\n                            selectedDays={user.availability}\n                            name=\"availability\"\n                        />\n                    </div>}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Profile;","import { React, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap'\nimport DayPicker, { DateUtils } from \"react-day-picker\";\nimport axios from 'axios'\n\nconst SignUpForm = () => {\n\t//Profile pictures not working, must fix \n  const [dates, setDates] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [role, setRole] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [bestSubjects, setBestSubjects] = useState([]);\n  const [problemSubjects, setProblemSubjects] = useState([]);\n\n  const requiredFields = {\"role\":\"Role required. \", \"full_name\": \"Full Name required. \", \"username\": \"Username required. \", \"password\":\"Password required. \", \"us_phone_number\": \"Phone required. \"}\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    errorChecker(e);\n\twindow.scrollTo(0, 0)\n    if (errors.length === 0) {\n      const email = e.target.email.value;\n      const full_name = e.target.full_name.value;\n      const username = e.target.username.value;\n      const password = e.target.password.value;\n      const biography = e.target.biography ? e.target.biography.value : '';\n      const us_phone_number = e.target.us_phone_number.value;\n      const meeting_link = e.target.meeting_link ? e.target.meeting_link.value : ' ';\n      const profile_picture = e.target.profile_picture.files[0];\n\t  console.log(e.target)\n\t  console.log(profile_picture)\n      const bodyFormData = new FormData();\n\n      bodyFormData.append(\"email\", email);\n      bodyFormData.append('full_name', full_name);\n      bodyFormData.append('password', password);\n      bodyFormData.append('us_phone_number', us_phone_number);\n      bodyFormData.append('profile_picture', profile_picture);\n      bodyFormData.append('biography', biography)\n      bodyFormData.append('username', username);\n      bodyFormData.append('availability', dates.map((date) => {\n        console.log(date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear())\n        return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n      }));\n\n      if (role.includes(\"tutor\")) {\n        bodyFormData.append('meeting_link', meeting_link);\n        bodyFormData.append('tutor_subjects', bestSubjects);\n      }\n\n      if (role.includes(\"student\")) {\n        bodyFormData.append('problem_subjects', problemSubjects);\n      }\n\n      setSubmitted(true);\n      axios.post('http://127.0.0.1:5000/user/sign_up', bodyFormData)\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n\n  const updateRole = (e) => {\n    setRole(e.target.value)\n  }\n\n  const errorChecker = (e) => {\n    if (!role && errors.indexOf(\"role\")===-1) {\n      setErrors([...errors, \"role\"])\n    }\n\n    if(!e.target.email.value && errors.indexOf(\"email\")===-1){\n      setErrors([...errors, \"email\"])\n    }\n\n    if(!e.target.full_name.value && errors.indexOf(\"full_name\")===-1){\n      setErrors([...errors, \"full_name\"])\n    }\n\n    if(!e.target.username.value  && errors.indexOf(\"username\")===-1){\n      setErrors([...errors, \"username\"])\n    }\n\n    if(!e.target.us_phone_number.value  && errors.indexOf(\"us_phone_number\")===-1){\n      setErrors([...errors, \"us_phone_number\"])\n    }\n\n\tif(e.target.us_phone_number.value && e.target.email.value && e.target.username.value && e.target.full_name.value && role){\n\t\tsetErrors([])\n\t}\n  }\n  const handleDayClick = (day, { selected }) => {\n    const arr = [...dates];\n    if (selected) {\n      const selectedIndex = arr.findIndex(selectedDay =>\n        DateUtils.isSameDay(selectedDay, day)\n      );\n      arr.splice(selectedIndex, 1);\n      setDates(arr);\n    }\n    else {\n      setDates([...dates, day]);\n    }\n  }\n\n  const conditionalSubjectType = () => {\n    let returnedTypes = [];\n    const tutor = (\n      <div>\n        <Form.Group controlId=\"conditional\">\n          <Form.Group controlId=\"meeting_link\">\n            <Form.Label>*Meeting Link</Form.Label>\n            <Form.Control type=\"text\" />\n          </Form.Group>\n          <Form.Group controlId=\"subjects\">\n            <Form.Label>Best Subjects</Form.Label>\n            {subjects(false)}\n          </Form.Group>\n        </Form.Group>\n      </div>\n    )\n\n    const student =\n      (<Form.Group controlId=\"problem_subjects\">\n        <Form.Label>Problem Subjects</Form.Label>\n        {subjects(true)}\n      </Form.Group>)\n\n    if (role.includes(\"tutor\")) {\n      returnedTypes.push(tutor);\n    }\n\n    if (role.includes(\"student\")) {\n      returnedTypes.push(student);\n    }\n\n    return returnedTypes;\n\n  }\n\n  const conditionalCheck = (problem) => {\n    let onCheckChange;\n    if (!problem) {\n      onCheckChange = (e) => {\n        if (bestSubjects.includes(e.target.value)) {\n          setBestSubjects(bestSubjects.filter(element => element !== e.target.value));\n          console.log(bestSubjects);\n        }\n        else {\n          setBestSubjects([...bestSubjects, e.target.value])\n          console.log(bestSubjects);\n        }\n\n      }\n    }\n    else {\n      onCheckChange = (e) => {\n        if (problemSubjects.includes(e.target.value)) {\n          setProblemSubjects(problemSubjects.filter(element => element !== e.target.value));\n          console.log(problemSubjects);\n        }\n        else {\n          setProblemSubjects([...problemSubjects, e.target.value]);\n          console.log(problemSubjects);\n        }\n      }\n    }\n\n    return onCheckChange;\n  }\n\n  const subjects = (problem) => {\n    let id = problem ? \"problem\" : \"best\"\n    return (\n      <div>\n        <Form.Group controlId={`math ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Math\" label=\"Math\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`physics ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Physics\" label=\"Physics\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`chemistry ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Chemistry\" label=\"Chemistry\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`biology ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Biology\" label=\"Biology\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`english ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"English\" label=\"English\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`history ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"History\" label=\"History\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`compsci ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Computer Science\" label=\"Computer Science\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n      </div>\n    )\n  }\n\n  const errorList = errors.map((errorCode)=>(\n\t<p className=\"form-error\" key={errorCode}>{requiredFields[errorCode]}</p>)\n\t)\n  return (\n    <div className=\"form-comp\">\n      <h1>Sign Up</h1>\n\n      {errorList}\n      {submitted && errors.length === 0 ? <span className=\"form-text\">Please check your email to finish activating your account.</span> : null}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control name=\"email\" type=\"email\" required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"full_name\">\n          <Form.Label>Full Name</Form.Label>\n          <Form.Control name=\"full_name\" type=\"text\" required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control name=\"username\" type=\"text\" required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control name=\"password\" type=\"password\" required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"us_phone_number\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control name=\"us_phone_number\" type=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required />\n        </Form.Group>\n\n        <Form.Group controlId=\"biography\">\n          <Form.Label>Tell us about yourself!</Form.Label>\n          <Form.Control name=\"biography\" as=\"textarea\" rows={3} />\n        </Form.Group>\n\n        {conditionalSubjectType()}\n        <Form.Group controlId=\"role\">\n          <Form.Check\n            inline\n            value=\"tutor\"\n            name=\"role\"\n            checked={role === \"tutor\"}\n            label=\"Tutor\"\n            type=\"radio\"\n            id=\"tutor\"\n            onClick={updateRole}\n\t\t\trequired\n          />\n          <Form.Check\n            inline\n            value=\"student\"\n            name=\"role\"\n            checked={role === \"student\"}\n            label=\"Student\"\n            type=\"radio\"\n            id=\"student\"\n            onClick={updateRole}\n\t\t\trequired\n          />\n          <Form.Check\n            inline\n            value=\"student,tutor\"\n            name=\"role\"\n            checked={role === \"student,tutor\"}\n            label=\"Both\"\n            type=\"radio\"\n            id=\"both\"\n            onClick={updateRole}\n\t\t\trequired\n          />\n        </Form.Group>\n\n        <Form.Label>Profile Picture</Form.Label>\n        <input accept=\".jpg,.png,.jpeg\" type=\"file\" name=\"profile_picture\" />\n\n        <Form.Group controlId=\"availability\">\n          <Form.Label>*Availability</Form.Label>\n\n          <DayPicker\n            className=\"calendar\"\n            disabledDays={{ before: new Date() }}\n            format=\"MM/DD/YYYY\"\n            name=\"availability\"\n            onDayClick={handleDayClick}\n            selectedDays={dates}\n          />\n\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n\n      </Form>\n\n    </div>);\n}\n\nexport default SignUpForm;","import React, { useEffect, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useParams, useHistory } from \"react-router-dom\";\nimport{ DateUtils } from \"react-day-picker\";\nimport DayPicker from 'react-day-picker/DayPicker';\nimport { axios_instance } from '..';\nimport { verifyJWT } from '../utility';\n\nconst EditUser = (props) => {\n  let { username } = useParams();\n  const jwt = verifyJWT()\n\n  const history = useHistory();\n  const [dates, setDates] = useState([])\n  const [user, set_user] = useState({});\n\n\n  useEffect(() => {\n    if(props && props.location &&  props.location.state.user) {\n      set_user(props.location.state.user)\n    }\n    else {\n    axios_instance.get(`/user/${username}`).then((res) => {\n      set_user(res.data);\n    })\n  }\n  }, [])\n\n  const handleChange = (e) => {\n    const updated_user = {\n      ...user,\n      [e.target.id]: e.target.value\n    }\n    set_user(updated_user)\n  }\n\n  const deleteUser = () => {\n    history.push(\"/\");\n    axios_instance.delete(`http://127.0.0.1:5000/user/${username}/edit`)\n    .catch((err)=>{\n      console.log(err)\n    })\n\n  }\n\n  const handleDayClick = (day, { selected }) => {\n    const arr = [...dates];\n    if (selected) {\n      const selectedIndex = arr.findIndex(selectedDay =>\n        DateUtils.isSameDay(selectedDay, day)\n      );\n      arr.splice(selectedIndex, 1);\n      setDates(arr);\n    }\n    else {\n      setDates([...dates, day]);\n    }\n  }\n\n  const parse_dates = (date_list) => {\n    console.log(date_list)\n    return date_list.map((date) => {\n      return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\n    })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let parsed_availability = []\n    if (dates.length!==0) {\n     parsed_availability = parse_dates(dates);\n    }\n    const edited_user = {\n      email: user.email,\n      full_name: user.full_name,\n      username: user.username,\n      biography: user.biography,\n      roles: user.roles,\n      availability: parsed_availability,\n      us_phone_number: user.us_phone_number\n    }\n    const config = {\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n    axios_instance.post(`http://127.0.0.1:5000/user/${username}/edit`, edited_user, config)\n      .then(function (res) {\n        if(jwt.username==username){\n        localStorage.setItem(\"token\", res.data.access_token)\n        }\n        history.push(\"/\");\n        window.location.reload(true)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  return (\n    <div >\n      <h1>Edit</h1>\n      <Form className=\"form-comp\" onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" value={user.email || ' '} onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" value={user.username || ' '} onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"us_phone_number\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control type=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" value={user.us_phone_number || ''} onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"biography\">\n          <Form.Label>Tell us about yourself!</Form.Label>\n          <Form.Control as=\"textarea\" rows={3} value={user.biography || ' '} onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"role\">\n          <Form.Check\n            inline\n            value=\"tutor\"\n            name=\"roles\"\n            label=\"Tutor\"\n            type=\"radio\"\n            id=\"roles\"\n            onClick={handleChange}\n          />\n          <Form.Check\n            inline\n            value=\"student\"\n            name=\"role\"\n            label=\"Student\"\n            type=\"radio\"\n            id=\"roles\"\n            onClick={handleChange}\n          />\n\n          <Form.Check\n            inline\n            value=\"student,tutor\"\n            name=\"role\"\n            label=\"Both\"\n            type=\"radio\"\n            id=\"both\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"availability\">\n          <Form.Label>Availability</Form.Label>\n          <DayPicker\n            className=\"calendar\"\n            format=\"MM/DD/YYYY\"\n            name=\"availability\"\n            onDayClick={handleDayClick}\n            selectedDays={dates}\n\t\t\tdisabledDays={{ before: new Date() }}\n          />\n\n        </Form.Group>\n\t\t\n        <Form.Group>\n          <a className=\"delete-link\" onClick={deleteUser}>Delete</a>\n        </Form.Group>\n        <Form.Group>\n          <span>Forgot password? Click<a href=\"/reset_password\"> Here</a></span>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>);\n}\n\nexport default EditUser;\n\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Dropdown } from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { axios_instance } from '..';\nimport Select from 'react-select'\nimport \"../../node_modules/react-time-picker/dist/TimePicker.css\";\nimport \"../../node_modules/react-clock/dist/Clock.css\";\nimport TimePicker from 'react-time-picker'\nimport Subjects from './Subjects';\n\n\nconst EditSessionForm = (props) => {\n  const history = useHistory();\n  const [endTime, setEndTime] = useState('');\n  const [time, setTime] = useState('');\n  const [session, setSession] = useState(props.location.state.session);\n  const [errors, setErrors] = useState('');\n  const handleErrors = () => {\n    if (!time || !endTime || time > endTime) {\n      setErrors('Invalid time');\n    }\n    else {\n      setErrors('')\n    }\n    return errors;\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    handleErrors();\n    if (!errors) {\n      const endDateTime = formatDateTime(session.date, endTime);\n      const startDateTime = formatDateTime(session.date, time)\n      const edited_session = {\n        ...session,\n        end_time: endDateTime,\n        date: startDateTime,\n      }\n\n      const config = {\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      }\n\n      axios_instance.post(`/user/sessions/${session._id.$oid}/edit`, { ...edited_session, tutor_confirmed: false, student_confirmed: false }, config)\n        .then(() => {\n          history.push(`/`)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n\n  const handleDayClick = (day, { selected }) => {\n    const selectedDay = selected ? undefined : day;\n    const updated_session = { ...session, date: selectedDay }\n    setSession(updated_session);\n  }\n\n  const onTimeChange = (time) => {\n    setTime(time);\n  }\n\n  const onEndTimeChange = (time) => {\n    setEndTime(time);\n  }\n  const formatDateTime = (date, time) => {\n    const hour = parseInt(time.substring(0, 1)) == 0 ? parseInt(time.substring(1, 2)) : parseInt(time.substring(0, 2))\n    const minutes = time.substring(2)\n\n\n    const amPM = hour < 12 ? 'AM' : 'PM'\n    const formatted_hour = hour > 12 ? hour - 12 : hour < 10 ? \"0\" + hour : hour;\n    time = formatted_hour + minutes + \" \" + amPM\n\n    return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + time;\n  }\n\n  const onDropdownSelect = (eventKey) => {\n    setSession({ ...session, subject: eventKey });\n  }\n\n  const handleChange = (e) => {\n    const updated_session = {\n      ...session,\n      [e.target.id]: e.target.value\n    }\n    setSession(updated_session)\n  }\n\n  return (\n    <div className=\"form-comp-container\">\n      <div className=\"form-comp\">\n        <h1>Edit Session</h1>\n        <span className=\"errors\">{errors}</span>\n        <Form onSubmit={handleSubmit}>\n          <Subjects onSelect={onDropdownSelect} subject={session.subject} />\n          <Form.Group controlId=\"tutor\">\n            <Form.Label>Tutor</Form.Label>\n            <Form.Control type=\"text\" value={session.tutor.username} />\n          </Form.Group>\n\n          <Form.Group controlId=\"student\">\n            <Form.Label>Student</Form.Label>\n            <Form.Control type=\"text\" value={session.student.username} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <DayPickerInput\n              className=\"calendar\"\n              // disabledDays={{ before: new Date() }}\n              format=\"M/D/YYYY\"\n              name=\"date\"\n              id=\"date\"\n              onDayClick={handleDayClick}\n              selectedDays={new Date(session.date)}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label className=\"block-label\">Start Time</Form.Label>\n            <TimePicker\n              name=\"time\"\n              id=\"time\"\n              disableClock={true}\n              onChange={onTimeChange}\n              value={time}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label className=\"block-label\">End Time</Form.Label>\n            <TimePicker\n              name=\"end_time\"\n              id=\"end_time\"\n              disableClock={true}\n              onChange={onEndTimeChange}\n              value={endTime}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    </div>);\n}\n\n\nexport default EditSessionForm;","import React from 'react'\nimport io from 'socket.io-client'\n\nexport const socket = io.connect(\"http://127.0.0.1:5000\");\nexport const SocketContext = React.createContext();\n","import React, { useEffect, useContext, useCallback, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { axios_instance } from '..';\nimport Select from 'react-select';\nimport jwt_decode from 'jwt-decode'\nimport ReactLoading from 'react-loading';\nimport ReactPaginate from 'react-paginate';\nimport { parseDate, verifyJWT } from '../utility'\nimport io from 'socket.io-client'\nimport { SocketContext } from '../Hooks/socketContext'\n\nconst Chat = () => {\n\tconst jwt = verifyJWT();\n\n\tconst socket = useContext(SocketContext);\n\tconst { username } = useParams();\n\tconst [messages, set_messages] = useState({\n\t\toffset: 0,\n\t\trecipient: undefined,\n\t\tdisplayed: [],\n\t\tmessages: []\n\t});\n\n\tconst [user_list, set_user_list] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst perPage = 30;\n\tlet pageCount = Math.ceil(messages.messages.length) / perPage;\n\n\tconst handleReceiveMessage = useCallback((msg) => {\n\t\tconst id = jwt.id.replace(/['\"]+/g, '');\n\t\tif (id == msg.recipient.$oid) {\n\t\t\tset_messages((previous_messages) => {\n\t\t\t\tconst newArr = [...previous_messages.messages, msg]\n\t\t\t\treturn {\n\t\t\t\t\toffset: previous_messages.offset,\n\t\t\t\t\trecipient: previous_messages.recipient,\n\t\t\t\t\tdisplayed: (previous_messages.offset + perPage >= newArr.length ? newArr.slice(previous_messages.offset, newArr.length) : newArr.slice(previous_messages.offset, previous_messages.offset + perPage)),\n\t\t\t\t\tmessages: newArr\n\t\t\t\t}\n\t\t\t})\n\n\t\t}\n\t}, [])\n\n\n\n\n\tuseEffect(() => {\n\t\tset_messages({\n\t\t\t...messages,\n\t\t\tdisplayed: (messages.offset + perPage >= messages.messages.length ? messages.messages.slice(messages.offset, messages.messages.length) : messages.messages.slice(messages.offset, messages.offset + perPage))\n\t\t})\n\t}, [messages.offset])\n\n\n\tuseEffect(() => {\n\t\tif (jwt.rls.includes('student') && jwt.rls.includes('tutor')) {\n\t\t\taxios_instance.get('http://127.0.0.1:5000/user')\n\t\t\t\t.then(function (response) {\n\t\t\t\t\treturn response.data.filter(user => user.username != username)\n\t\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tset_user_list([...user_list, ...res])\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\n\t\telse if (jwt.rls.includes('tutor')) {\n\t\t\taxios_instance.get('http://127.0.0.1:5000/user/students')\n\t\t\t\t.then(function (response) {\n\t\t\t\t\treturn response.data.filter(user => user.username != username)\n\t\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tset_user_list([...user_list, ...res])\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\n\t\telse if (jwt.rls.includes('student')) {\n\t\t\taxios_instance.get('http://127.0.0.1:5000/user/tutors')\n\t\t\t\t.then(function (response) {\n\t\t\t\t\treturn response.data.filter(user => user.username != username)\n\t\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tset_user_list([...user_list, ...res])\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t\tsocket.on(\"msg\", handleReceiveMessage)\n\t\treturn () => {\n\t\t\tsocket.disconnect();\n\t\t};\n\t}, [])\n\n\tuseEffect(() => {\n\t\t//Getting called faultily after a message is recieved\n\t\tif (messages.recipient && messages.recipient.username != undefined) {\n\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\tresolve(setLoading(true))\n\t\t\t})\n\t\t\t\t.then\n\t\t\t\t(() => axios_instance.get(`http://127.0.0.1:5000/user/${username}/chat/${messages.recipient._id.$oid}`))\n\t\t\t\t.then((res) => {\n\t\t\t\t\tif (res.data) {\n\t\t\t\t\t\tset_messages({...messages, offset: 0, displayed: perPage >= res.data.length ? res.data.slice(0, res.data.length) : res.data.slice(0, perPage), messages: [...res.data] });\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tconsole.log(err)\n\t\t\t\t})\n\t\t}\n\t}, [messages.recipient])\n\n\n\tconst handleSubmit = (e) => {\n\n\t\te.preventDefault();\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t}\n\n\t\tconst message = {\n\t\t\trecipient: messages.recipient._id.$oid,\n\t\t\tbody: e.target.message.value,\n\t\t\tsender: jwt_decode(localStorage.getItem(\"token\")).id\n\t\t}\n\n\t\taxios_instance.post(`http://127.0.0.1:5000/user/${username}/chat/${messages.recipient._id.$oid}`, message, config)\n\t\t\t.then((res) => {\n\t\t\t\tconst newArr = [...messages.messages, res.data]\n\t\t\t\tset_messages({\n\t\t\t\t\t...messages,\n\t\t\t\t\tdisplayed: (messages.offset + perPage >= newArr.length ? newArr.slice(messages.offset, newArr.length) : newArr.slice(messages.offset, messages.offset + perPage)),\n\t\t\t\t\tmessages: newArr\n\t\t\t\t});\n\n\n\t\t\t\treturn res.data;\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsocket.emit(\"msg\", res)\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err)\n\t\t\t})\n\n\t}\n\n\tconst handleSelect = (selected) => {\n\t\tset_messages({ ...messages, recipient: selected })\n\t}\n\n\tconst handlePageClick = (e) => {\n\t\tlet selected = e.selected;\n\t\tlet offset = Math.ceil(selected * perPage);\n\t\tset_messages({...messages, offset: offset});\n\t};\n\n\tconst message_list = messages.displayed.map((message) => {\n\n\t\tlet message_class =  messages.recipient._id.$oid == message.sender.$oid ? \"recieved\" : \"sent\";\n\n\t\tconst date = new Date(message.timestamp.$date);\n\n\t\tconst timestamp = parseDate(date)\n\n\t\treturn (\n\t\t\t<div key={message._id.$oid} className={`message ${message_class}`}>\n\t\t\t\t<span className=\"message_text\">{message.body}</span>\n\t\t\t\t<span className=\"message_time\">{timestamp}</span>\n\n\t\t\t</div>)\n\t})\n\n\n\treturn (\n\t\t<Form onSubmit={handleSubmit} className=\"form-comp\">\n\t\t\t{messages.recipient ? <div>\n\t\t\t\t<h2 className=\"username\">{messages.recipient.username}</h2>\n\t\t\t\t{loading && <ReactLoading type={\"spin\"} color={\"white\"} height={'10%'} width={'10%'} className=\"loading_spinner\" />}\n\t\t\t\t<div >{message_list.length !== 0 ?\n\t\t\t\t\t<div className=\"message_list\">\n\t\t\t\t\t\t{message_list}\n\t\t\t\t\t\t< ReactPaginate\n\t\t\t\t\t\t\tpageCount={pageCount}\n\t\t\t\t\t\t\tpageRangeDisplayed={5}\n\t\t\t\t\t\t\tmarginPagesDisplayed={5}\n\t\t\t\t\t\t\tonPageChange={handlePageClick}\n\t\t\t\t\t\t\tcontainerClassName={'pagination'}\n\t\t\t\t\t\t\tsubContainerClassName={'pages pagination'}\n\t\t\t\t\t\t\tactiveClassName={'active'}\n\t\t\t\t\t\t\tpreviousLabel={'Previous'}\n\t\t\t\t\t\t\tnextLabel={'Next'}\n\t\t\t\t\t\t\tbreakLabel={'...'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div> :\n\t\t\t\t\t<span class=\"flavor-text\">Start a conversation</span>}</div>\n\t\t\t</div>\n\t\t\t\t: <div> <h1>Chat</h1><span class=\"flavor-text\">Select someone to chat with.</span></div>}\n\n\t\t\t<div className=\"message-form-input\">\n\t\t\t\t<div>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tmenuPortalTarget={document.querySelector('body')}\n\t\t\t\t\t\tmaxMenuHeight={220}\n\t\t\t\t\t\tclassNamePrefix=\"react-select\"\n\t\t\t\t\t\tclassName=\"select center\"\n\t\t\t\t\t\tonChange={handleSelect}\n\t\t\t\t\t\toptions={user_list}\n\t\t\t\t\t\tgetOptionLabel={(option) => option.username}\n\t\t\t\t\t\tgetOptionValue={(option) => option._id}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{messages.recipient && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Form.Group controlId=\"message\">\n\t\t\t\t\t\t\t<Form.Control type=\"text\" placeholder=\"Message\" />\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button type=\"submit\">Send</Button>\n\t\t\t\t\t</div>)}\n\t\t\t</div>\n\t\t</Form>\n\t)\n}\n\nexport default Chat;","import React, { useEffect} from 'react'\nimport {useLocation, useHistory} from 'react-router-dom'\nimport axios from 'axios'\n\nconst EmailRegistration = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const token = location.search.substr(7);\n    console.log(token)\n    const config = {\n        crossDomain: true,\n        headers: {\n          'Authorization':  ` Bearer ${token}`\n      }\n      }\n    useEffect(()=>{\n        axios.get('http://127.0.0.1:5000/finalize', config)\n       .then((res)=>{\n            // if(res.data.access_token){\n                setTimeout(()=>{\n                    localStorage.clear()\n                    localStorage.setItem(\"token\", res.data.access_token);\n                    history.push(\"/\")\n                    window.location.reload(true)\n                }, 2000)\n           // }\n        })\n        .catch((err)=>{\n            console.log(token)\n            console.log(err);\n        })\n\n    }, [])\n    return (\n    <div>\n        <h1>Successful registration</h1>\n        <p>Redirecting home...</p>\n    </div>)\n}\n\nexport default EmailRegistration;","\nimport React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport axios from 'axios'\n\nconst PasswordReset = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const token = location.search.substr(7);\n    const [passwordEmailSent, setPasswordEmailSent] = useState(false)\n    const resetPassword = (e) => {\n        e.preventDefault();\n        const config = {\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        axios.post('http://127.0.0.1:5000/reset_password', { password: e.target.new_pass.value, confirmNewPassword: e.target.confirm_new_pass.value }, config)\n            .then((res) => {\n                history.push(`/`)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    const sendResetEmail = (e) => {\n        const config = {\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        e.preventDefault();\n        const data = {\n            email: e.target.email.value\n        }\n        axios.post('http://127.0.0.1:5000/send_password_email', data, config)\n            .then((res) => {\n                setPasswordEmailSent(true);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    return (\n        <div>\n            <h1>Reset Your Password</h1>\n            { token ?\n                (\n\n                    <Form onSubmit={resetPassword}>\n                        <Form.Group controlId=\"new_pass\">\n                            <Form.Label>New password</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"confirm_new_pass\">\n                            <Form.Label>Confirm new password</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n                        <Button type=\"submit\">Submit</Button>\n                    </Form>\n                )\n                :\n                (\n                    <Form onSubmit={sendResetEmail}>\n                        {passwordEmailSent && <span className=\"flavor_text\">Password Reset Email Sent</span>}\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n                        <Button type=\"submit\">Send</Button>\n                    </Form>)\n            }\n        </div>\n    )\n}\n\nexport default PasswordReset;","import { useState, useEffect } from 'react'\nimport { axios_instance } from '../index'\nimport {subjects} from './Subjects'\nimport {Link} from 'react-router-dom';\nconst UserTableListing = (props) => {\n  const [hours, setHours] = useState([]);\n  const getHours = async (username) => {\n    const res = await axios_instance.get(`/user/${username}/tutoring_history?hours=true`)\n    return res.data;\n  }\n\n  useEffect(() => {\n    if (props.username) {\n      getHours(props.username)\n        .then((res) => {\n          const hoursFormatted = [];\n          for(const subject in res){\n            hoursFormatted.push(<div>{subject} : {res[subject]}</div>)\n          }\n          return hoursFormatted;\n        })\n        .then((res)=>{\n          setHours(res);\n        })\n    }\n    else {\n      console.log(\"NO USER FOUND\")\n    }\n  }, [])\n\n  return (\n \n      <tr className=\"userListing\">\n        <td>{props.full_name}</td>\n        <td><Link to={`/user/${props.username}`}>{props.username}</Link></td>\n        <td>{props.email}</td>\n        <td>{props.us_phone_number}</td>\n        <td>{props.roles}</td>\n        <td>{props.tutor_subjects && props.tutor_subjects.length !== 0 ? props.tutor_subjects.join(\", \") : \"N/A\"}</td>\n        <td>{props.tutor_subjects && props.problem_subjects.length !== 0 ? props.problem_subjects : \"N/A\"}</td>\n        <td>{hours}</td>\n      </tr>\n\n  );\n}\n\n\nexport default UserTableListing;","\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {\n  Link\n} from \"react-router-dom\";\nimport ReactPaginate from 'react-paginate'\nimport { Form, Table, Row} from 'react-bootstrap'\nimport UserTableListing from './UserTableListing'\nimport UserSessions from './UserSessions'\nimport Filters from './Filters'\n//ensure that start and end date are after each other in edit/sess create\n//allow deletion of profiles\n//auto delete if not 'is active' after a certain time period?\n//How to verify session happened? \n\nconst AdminPortal = () => {\n  //What if only a few head admins could make admin accs, only thru the admin portal?\n  const [users, setUsers] = useState({\n    userList: [],\n    displayed: [],\n    filtered: [],\n  });\n\n  const [offset, setOffset] = useState(0);\n  const perPage = 10;\n  let pageCount = Math.ceil(users.filtered.length) / perPage;\n  const [mode, setMode] = useState(\"user\")\n\n  const handlePageClick = (e) => {\n    let selected = e.selected;\n    let offset = Math.ceil(selected * perPage);\n    setOffset(offset);\n  };\n\n  const setModeFilter = (e) => {\n    setMode(e.target.value);\n  }\n\n  useEffect(() => {\n    setUsers({ ...users, displayed: offset + perPage >= users.filtered.length ? users.filtered.slice(offset, users.filtered.length) : users.filtered.slice(offset, offset + perPage) })\n  }, [offset])\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:5000/user')\n      .then((res) => {\n        //Turn this whole user thing into a hook, consolidate it and Dashboard\n        setUsers({ userList: res.data, filtered: res.data, displayed: res.data });\n        return res.data;\n      })\n  }, [])\n\n\n\n  //,aybe go back thru checkboxes and automate their creation with an array of sorts, so you don't have to copy-paste another one every time a new subject is added\n  return (<div>\n    <h1>Admin Portal</h1>\n    <Link to=\"/admin/subjects\" >Subjects</Link>\n    <Row>\n      <Form.Group className=\"radios\">\n        <Form.Check\n          inline\n          value=\"user\"\n          name=\"setModeFilter\"\n          label=\"User View\"\n          type=\"radio\"\n          id=\"mode\"\n          checked={(mode == \"user\")}\n          onClick={setModeFilter}\n        />\n        <Form.Check\n          inline\n          value=\"session\"\n          name=\"setModeFilter\"\n          label=\"Session View\"\n          type=\"radio\"\n          id=\"mode\"\n          onClick={setModeFilter}\n        />\n      </Form.Group>\n    </Row>\n    {mode == \"user\" && <Filters users={users} setUsers={setUsers} offset={offset} pageCount={pageCount} perPage={perPage} mode={mode} setMode={setMode} />}\n    {mode == \"user\" ? users.displayed.length === 0 ? <span className=\"flavor-text greyed_out\">No Matching Users</span> :\n      <div>\n        <Table responsive striped bordered hover variant=\"dark\">\n          <thead>\n            <th>Full Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Roles</th>\n            <th>Tutor's Subjects</th>\n            <th>Problem Subjects</th>\n            <th>Hours</th>\n          </thead>\n          <tbody>\n            {users.displayed.map((user) => {\n              return (\n                <UserTableListing\n                  key={user._id.$oid}\n                  full_name={user.full_name}\n                  username={user.username}\n                  email={user.email}\n                  us_phone_number={user.us_phone_number}\n                  roles={user.roles}\n                  tutor_subjects={user.tutor_subjects}\n                  problem_subjects={user.problem_subjects}\n                />\n              )\n            })}\n          </tbody>\n        </Table>\n        <ReactPaginate\n          pageCount={pageCount}\n          pageRangeDisplayed={5}\n          marginPagesDisplayed={5}\n          onPageChange={handlePageClick}\n          containerClassName={'pagination'}\n          subContainerClassName={'pages pagination'}\n          activeClassName={'active'}\n          previousLabel={'previous'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n        />\n\n\n      </div> :\n      <UserSessions perPage={5} />}\n  </div>\n\n  )\n}\n\n\n\n\n\nexport default AdminPortal;","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst Errors = (props) => {\nconsole.log(props.error)\n    const determineRendered = () => {\n        switch (props.error) {\n            case 401:\n                return (\n                <div>\n                    <h1>401</h1>\n                    <h2>You do not have access to this page</h2>\n                    <Link to=\"/\">Home</Link>\n                </div>);\n            case 404: \n                return (\n                <div>\n                    <h1>404</h1>\n                    <h2>The page was not found.</h2>\n                    <Link to=\"/\">Home</Link>\n                </div>)\n        }\n    }\n    return (\n        <div>\n            {determineRendered()}\n        </div>\n    )\n}\n\n\nexport default Errors;","import React, { useState, useEffect } from 'react';\nimport { Form, FormControl, Button } from 'react-bootstrap'\nimport { axios_instance } from '../index'\n\nconst CreateSubject = () => {\n    const [subjects, setSubjects] = useState([]);\n    const [errors, setErrors] = useState([]);\n\n    const createSubject = (e) => {\n        e.preventDefault()\n        const config = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        axios_instance.post(\"http://127.0.0.1:5000/subjects/new\", { 'subject': e.target.subject.value }, config)\n            .then((res) => {\n                e.target.subject.value = \"\"\n                setErrors('')\n                setSubjects([...subjects, res.data])\n            })\n            .catch((err) => {\n                setErrors(\"An error occurred processing your request.\")\n            })\n    }\n\n    const deleteSubject = (id) => {\n        axios_instance.post(`http://127.0.0.1:5000/subjects/delete/${id}`)\n        .then(()=>{\n            const newSubjects = subjects.filter((subject)=>subject._id.$oid !== id);\n            setSubjects(newSubjects);\n        })\n        .catch((err)=>{\n            console.log(err)\n            setErrors('Error occurred while deleting')\n        })\n    }\n    useEffect(() => {\n        axios_instance.get(\"http://127.0.0.1:5000/subjects\")\n            .then((res) => {\n                setSubjects(res.data);\n            })\n    }, [])\n\n    return (\n        <div>\n            <h1>Subjects</h1>\n            <h3>Create Subject</h3>\n            {errors}\n            <Form className=\"form-comp\" onSubmit={createSubject}>\n                <Form.Label>New Subject</Form.Label>\n                <FormControl type=\"text\" name=\"subject\" />\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n\n            <h3>Current Subjects</h3>\n            <div className=\"subjects\">\n                {subjects.map((element) => {\n\n                    return (<div className=\"subject\" key={element._id.$oid}>\n                        <p>{element.subject}</p>\n                        <a className=\"delete-link\" onClick={()=>deleteSubject(element._id.$oid)}>Delete</a>\n                    </div>)\n                }\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default CreateSubject;","import  {Switch, Route} from 'react-router-dom';\nimport React from 'react';\nimport CreateSubject from './Components/CreateSubject';\nimport AdminPortal from './Components/AdminPortal';\n\n\nconst AdminRouter = () => {\n    return (\n    <Switch>\n     <Route path=\"/admin/subjects\" component={CreateSubject}/>\n     <Route path=\"/admin\" component={AdminPortal}/>\n </Switch>)\n}\n\nexport default AdminRouter;","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport CreateSessionForm from \"./CreateSessionForm\";\nimport Dashboard from \"./Dashboard\";\nimport HomePage from \"./Homepage\";\nimport LoginForm from \"./LoginForm\";\nimport NavBar from \"./NavBar\";\nimport Profile from \"./Profile\";\nimport SignUpForm from \"./SignUpForm\";\nimport EditUser from './EditUser'\nimport jwt from 'jsonwebtoken';\nimport EditSessionForm from \"./EditSession\";\nimport Chat from \"./Chat\"\nimport EmailRegistration from \"./EmailRegistration\";\nimport PasswordReset from \"./PasswordReset\";\nimport AdminPortal from \"./AdminPortal\";\nimport Errors from \"./Errors\"\nimport AdminRouter from \"../AdminRouter\";\nimport {verifyJWT} from \"../utility\"\nimport {SocketContext, socket} from '../Hooks/socketContext'\n\nconst AppRouter = () => {\n  const jwt = verifyJWT();\n  return (\n    <BrowserRouter>\n      <div>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" component={HomePage} exact />\n          <Route path=\"/finalize_registration\" component={EmailRegistration} exact />\n          <Route exact path=\"/reset_password\" component={PasswordReset} />\n          <Route path=\"/sign_up\" component={SignUpForm} exact />\n          <Route path=\"/sign_in\" component={LoginForm} exact />\n          <Route path=\"/dashboard\" exact>\n            {jwt ? <Dashboard /> : <Errors error={401} />}\n          </Route>\n          <Route path=\"/user/create_session\" exact>\n            {jwt ? <CreateSessionForm /> : <Errors error={401} />}\n          </Route>\n          <Route exact path=\"/user/sessions/:session/edit\" component={EditSessionForm} />\n          <Route exact path=\"/user/:username\" render={({ match }) => {\n            return (\n              <div>\n                {jwt ? <Profile  /> : <Errors error={401} />}\n              </div>\n            )\n          }} />\n          <Route exact path=\"/user/:username/edit\" render={({ match }) => {\n            return (\n              <div>\n                {jwt && match.params.username == jwt.username || jwt.rls.includes('admin') ? <EditUser /> : <Errors error={401} />}\n              </div>\n            )\n          }} />\n\n          <Route exact path=\"/user/:username/chat\" render={({ match }) => {\n            return (\n\t\t\t\t<SocketContext.Provider value={socket}>\n                {jwt && (match.params.username == jwt.username || jwt.rls.includes('admin')) ? <Chat /> : <Errors error={401} />}\n\t\t\t\t</SocketContext.Provider>\n            )\n          }} />\n          <Route path=\"/admin\" render={({ match }) => {\n            return (\n              <div>\n              {jwt && jwt.rls.includes('admin') ? <AdminRouter /> : <Errors error={401} />}\n\t\t\t  </div>\n            )\n            }}/>\n          <Route>\n            <Errors error={404} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default AppRouter;","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './component_styling/main.scss'\nimport axios from 'axios'\nimport AppRouter from './Components/Router'\n\nexport const axios_instance = axios.create({\n  baseURL: 'http://localhost:5000'\n});\n\naxios_instance.interceptors.request.use(\n  function (config) {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      config.headers[\"Authorization\"] = 'Bearer ' + token;\n    }\n    return config;\n  },\n  function (error) {\n    return Promise.reject(error);\n  }\n);\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <AppRouter />\n    </React.StrictMode>,\n      document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://it.ly/CRA-vitals\nreportWebVitals();\n//export default socket;\n"],"sourceRoot":""}