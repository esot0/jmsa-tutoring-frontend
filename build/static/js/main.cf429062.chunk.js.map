{"version":3,"sources":["reportWebVitals.js","utility.js","Components/Subjects.js","Components/CreateSessionForm.js","Components/UserCard.js","Components/Filters.js","Components/Dashboard.js","Components/Homepage.js","Components/LoginForm.js","Components/NavBar.js","Components/SessionListing.js","Components/SessionFilters.js","Components/UserSessions.js","Components/Profile.js","Components/SignUpForm.js","Components/EditUser.js","Components/EditSession.js","Components/Chat.js","Components/EmailRegistration.js","Components/PasswordReset.js","Components/UserTableListing.js","Components/AdminPortal.js","Components/Errors.js","Components/CreateSubject.js","AdminRouter.js","Components/Router.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","parseDate","dateInput","date","Date","getMonth","getDate","getFullYear","parseTime","AMPM","getHours","getMinutes","verifyJWT","decoded","user","localStorage","getItem","jwt","verify","e","console","log","Subjects","props","useState","subjects","setSubjects","useEffect","axios_instance","get","res","data","className","checkboxes","map","element","Form","Check","type","value","subject","label","name","onChange","onCheck","Dropdown","onSelect","eventKey","Toggle","variant","Menu","Item","CreateSessionForm","history","useHistory","setDate","time","setTime","endTime","setEndTime","setSubject","user_list","set_user_list","other_user","setOtherUser","rls","includes","response","filter","username","catch","error","formatDateTime","hour","parseInt","substring","minutes","onSubmit","preventDefault","session","end_date","post","headers","push","err","Group","controlId","Label","selected","options","getOptionLabel","option","getOptionValue","_id","classname","disabledDays","before","format","id","inputProps","required","onDayClick","day","undefined","selectedDays","disableClock","Button","UserCard","Card","Img","src","Body","Title","full_name","Text","bio","length","href","Filters","open","setOpen","nameFilter","emailFilter","usernameFilter","phoneFilter","roleFilter","subjectsFilter","availabilityFilter","setNameFilter","setEmailFilter","setUsernameFilter","setPhoneFilter","role","setRole","setSubjectsFilter","setAvailabilityFilter","inputChange","hookUpdateFunctions","target","userToken","filtered","users","userList","allChecks","toLowerCase","email","us_phone_number","startsWith","tutor_subjects","every","problem_subjects","roles","foundSameDate","i","availability","$date","availabilityCheck","setUsers","displayed","offset","perPage","slice","setRoleFilter","checked","onClick","aria-controls","aria-expanded","Collapse","in","Row","Col","FormControl","onDayChange","inline","Dashboard","setUserlist","setOffset","loading","setLoading","fullName","filters","setFilters","pageCount","Math","ceil","usernameCheck","subjectCheck","tutoring_subjects","typeCheck","fullNameCheck","userDash","biography","$oid","color","height","width","pageRangeDisplayed","marginPagesDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","previousLabel","nextLabel","breakLabel","HomePage","alt","rel","LoginForm","errors","setErrors","password","dataType","xhrFields","withCredentials","crossDomain","access_token","clear","setItem","window","location","reload","Control","placeholder","NavBar","setUsername","Navbar","collapseOnSelect","expand","to","Brand","Nav","style","display","Link","SessionListing","mode","tutor_confirmed","student_confirmed","confirmed","setConfirmed","tutor","student","end_time","confirmation","pathname","state","SessionFilters","tutorFilter","studentFilter","selectedDay","startDateFilter","startTimeFilter","minTime","endTimeFilter","sessionSubjectFilter","UserSessions","useParams","raw_sessions","displayed_sessions","sessions_list","set_sessions_list","month","formattedDate","filteredSessions","sessionDate","sameDate","startDateTime","endDateTime","sessionEndDate","config","sessions","Profile","set_user","parsed_dates","milliseconds","profile_picture","onError","SignUpForm","dates","setDates","submitted","setSubmitted","bestSubjects","setBestSubjects","problemSubjects","setProblemSubjects","updateRole","errorChecker","conditionalCheck","problem","meeting_link","files","bodyFormData","FormData","append","axios","pattern","as","rows","returnedTypes","conditionalSubjectType","accept","arr","selectedIndex","findIndex","DateUtils","isSameDay","splice","EditUser","handleChange","updated_user","date_list","parsed_availability","edited_user","delete","EditSessionForm","setSession","edited_session","updated_session","Chat","messages","set_messages","recipient","set_recipient","Promise","resolve","reject","message_list","message","message_class","sender","timestamp","body","socket","on","msg","jwt_decode","newArr","class","menuPortalTarget","document","querySelector","maxMenuHeight","classNamePrefix","EmailRegistration","useLocation","token","search","substr","setTimeout","PasswordReset","passwordEmailSent","setPasswordEmailSent","Authorization","new_pass","confirmNewPassword","confirm_new_pass","UserTableListing","hours","setHours","a","hoursFormatted","join","AdminPortal","setMode","setModeFilter","Errors","determineRendered","CreateSubject","newSubjects","AdminRouter","path","component","AppRouter","exact","render","match","params","create","baseURL","io","connect","interceptors","request","use","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf429062.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import jwt from 'jsonwebtoken'\n\nconst parseDate = (dateInput) => {\n  const date = new Date(dateInput);\n  return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + parseTime(dateInput);\n}\n\nconst parseTime = (dateInput) => {\n  const date = new Date(dateInput);\n  const AMPM = date.getHours() >= 12 ? \"PM\" : \"AM\";\n  return ((date.getHours() > 12 ? date.getHours() - 12 : date.getHours()) + \":\" + date.getMinutes() + \" \" + AMPM);\n}\n\nconst subjectList = [];\n//Later to be stuffed into DB\n\nconst verifyJWT = () => {\n  let user = localStorage.getItem('token');\n  let decoded;\n  if (user) {\n    try {\n      decoded = jwt.verify(user, '/NJIBYUGHBYUHIKNBJBYBTGYIUJNBGFB/')\n    }\n    catch (e) {\n      console.log(e);\n      return null;\n    }\n    return decoded;\n  }\n  \n}\n\nexport {parseDate, parseTime,verifyJWT}\n","import { Dropdown, Form } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\"\nimport { subjectList } from \"../utility\";\nimport { axios_instance } from '../index'\n//change to get thessse from db later\n\nconst Subjects = (props) => {\n  const [subjects, setSubjects] = useState([])\n\n  useEffect(() => {\n    axios_instance.get(\"http://127.0.0.1:5000/subjects\")\n      .then((res) => {\n        setSubjects(res.data);\n      })\n  }, [])\n\n  const onDropdownSelect = (eventKey) => {\n    if (eventKey == props.subject) {\n      props.onSelect('')\n    }\n    else {\n      props.onSelect(eventKey)\n    }\n  }\n\n\n  //Maybe just add subjects to db?\n  return (\n    <div className=\"center\">\n      { props.checkboxes ? (\n        <div className=\"checkboxes subjects\">\n         { subjects.map((element) =>  <Form.Check type=\"checkbox\" key={element.subject}value={element.subject} label={element.subject} name=\"setSubjectsFilter\" onChange={props.onCheck} />)} \n        </div>\n      ) : (<Dropdown onSelect={onDropdownSelect}>\n        <Dropdown.Toggle variant=\"success\" className=\"subject\">\n          <span> {props.subject ? props.subject : \"Subject\"}</span>\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {subjects.map(element => (<Dropdown.Item eventKey={element.subject}><span>{element.subject}</span></Dropdown.Item>),)}\n        </Dropdown.Menu>\n      </Dropdown>)\n      }\n    </div>\n  )\n}\n\nexport default Subjects;","import React, { useEffect, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport TimePicker from 'react-time-picker'\nimport { useHistory } from 'react-router-dom'\nimport { axios_instance } from '..';\nimport Select from 'react-select';\nimport Subjects from './Subjects';\nimport { verifyJWT } from '../utility';\nimport \"../../node_modules/react-time-picker/dist/TimePicker.css\";\nimport \"../../node_modules/react-clock/dist/Clock.css\";\n\nconst CreateSessionForm = () => {\n\n  const history = useHistory();\n  const [date, setDate] = useState('')\n  const [time, setTime] = useState('')\n  const [endTime, setEndTime] = useState('')\n  const [subject, setSubject] = useState('')\n  const [user_list, set_user_list] = useState([])\n  const [other_user, setOtherUser] = useState({})\n  const [errors, setErrors] = useState('')\n\n  const jwt = verifyJWT();\n  useEffect(() => {\n    if (jwt.rls.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then(function (response) {\n          return response.data.filter(user => user.username != jwt.username)\n        })\n        .then(function (response) {\n          console.log(response)\n          set_user_list([...user_list, ...response])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    if (jwt.rls.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then(function (response) {\n          return response.data.filter(user => user.username != jwt.username)\n        })\n        .then(function (response) {\n          set_user_list([...user_list, ...response])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [])\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const session = {\n      subject: subject,\n      date: formatDateTime(date, time),\n      end_date: formatDateTime(date, endTime),\n      other_user: other_user\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    axios_instance.post('http://127.0.0.1:5000/user/sessions/new', session, config)\n      .then((res) => {\n        history.push(`/user/${jwt.username}`)\n      }).catch((err) => {\n        console.log(err)\n      })\n\n\n  }\n\n  const handleDayClick = (day, { selected }) => {\n    const selectedDay = selected ? undefined : day;\n    setDate(selectedDay)\n  }\n\n  const handleSelect = (selected) => {\n    setOtherUser(selected)\n  }\n\n  const onTimeChange = (time) => {\n    setTime(time)\n  }\n\n  const onEndTimeChange = (time) => {\n    setEndTime(time)\n  }\n  const formatDateTime = (date, time) => {\n    const hour = parseInt(time.substring(0, 1)) == 0 ? parseInt(time.substring(1, 2)) : parseInt(time.substring(0, 2))\n    const minutes = time.substring(2)\n    const amPM = hour < 12 ? 'AM' : 'PM'\n    const formatted_hour = hour > 12 ? hour - 12 : hour;\n    time = formatted_hour + minutes + \" \" + amPM\n    return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + time;\n  }\n\n\n\n  return (\n    <div className=\"form-comp\">\n      <h1>Set up a Session</h1>\n      <Form onSubmit={handleSubmit}>\n        {/*make dropdown a compoent*/}\n        <Subjects subject={subject} onSelect={setSubject} />\n\n        <Form.Group controlId=\"session_attendee\">\n          <Form.Label>{jwt.rls.includes('tutor') ? 'Student' : 'Tutor'}</Form.Label>\n          <Select\n            className=\"select center\"\n            onChange={handleSelect}\n            options={user_list}\n            getOptionLabel={(option) => option.username}\n            getOptionValue={(option) => option._id}\n          />\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label classname=\"block-label\">Date</Form.Label>\n          <div>\n            <DayPickerInput\n              className=\"calendar\"\n              disabledDays={{ before: new Date() }}\n              format=\"M/D/YYYY\"\n              name=\"date\"\n              id=\"date\"\n              inputProps={\n                { required: true }\n              } \n              onDayClick={handleDayClick}\n              selectedDays={date}\n            />\n          </div>\n        </Form.Group>\n\n        <div>\n          <Form.Label className=\"block-label\">Start Time: </Form.Label>\n          <TimePicker\n            name=\"time\"\n            id=\"time\"\n            required={true}\n            disableClock={true}\n            onChange={onTimeChange}\n            value={time}\n          />\n\n\n\n          <Form.Label className=\"block-label\">End Time: </Form.Label>\n          <TimePicker\n            name=\"end_time\"\n            id=\"end_time\"\n            required={true}\n            disableClock={true}\n            onChange={onEndTimeChange}\n            value={endTime}\n          />\n        </div>\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    </div>);\n}\n\nexport default CreateSessionForm;","import React from 'react'\nimport { Card, Button } from 'react-bootstrap';\n\nconst UserCard = (props)  => {\n    return (\n<Card className=\"card user_card wide_card\" >\n    <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n    <Card.Body>\n      <Card.Title>{props.full_name}</Card.Title>\n      <Card.Text>\n        {props.bio.length >=20 ? <span className=\"card-body-text\">{props.bio.substring(20)}...</span>: <span className=\"card-body-text\">{props.bio}</span>}\n      </Card.Text>\n      <Button variant=\"primary\" href={`/user/${props.username}`}>Profile</Button>\n    </Card.Body>\n  </Card>)\n}\n\nexport default UserCard;","import { useState, useEffect } from 'react';\nimport { Form, FormControl, Collapse, Button, Dropdown, Col, Row, Pagination } from 'react-bootstrap'\nimport jwt from 'jsonwebtoken';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport Subjects from '../Components/Subjects'\nconst Filters = (props) => {\n    const [open, setOpen] = useState(false);\n\n    const [filter, setFilter] = useState({\n        nameFilter: '',\n        emailFilter: '',\n        usernameFilter: '',\n        phoneFilter: '',\n        roleFilter: '',\n        subjectsFilter: [],\n        availabilityFilter: null\n    })\n    //This will replace the long string of use states later\n    const [nameFilter, setNameFilter] = useState('');\n    const [emailFilter, setEmailFilter] = useState('');\n    const [usernameFilter, setUsernameFilter] = useState('');\n    const [phoneFilter, setPhoneFilter] = useState('');\n    const [role, setRole] = useState('');\n    const [subjectsFilter, setSubjectsFilter] = useState([]);\n    const [availabilityFilter, setAvailabilityFilter] = useState(null);\n    //USER availability not defined\n    // not working subjects filter\n    //\n\n    const inputChange = (e) => {\n        hookUpdateFunctions[e.target.name](e.target.value)\n    }\n\n    let userToken = localStorage.getItem('token');\n    let decoded;\n    if (userToken) {\n        try {\n            decoded = jwt.verify(userToken, '/NJIBYUGHBYUHIKNBJBYBTGYIUJNBGFB/')\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n\n    const handleDayClick = (day, { selected }) => {\n        const selectedDay = selected ? undefined : day;\n        setAvailabilityFilter(selectedDay);\n    }\n\n    const availabilityCheck = (user) => {\n        let foundSameDate = false;\n        let i = 0;\n\n        while (!foundSameDate && i < user.availability.length) {\n            const date = new Date(user.availability[i++].$date);\n            foundSameDate = availabilityFilter.getDate() == date.getDate()\n                && availabilityFilter.getFullYear() == date.getFullYear()\n                && availabilityFilter.getMonth() == date.getMonth();\n        }\n\n        return foundSameDate;\n    }\n\n    useEffect(() => {\n        const filtered = props.users.userList.filter((user) => {\n\n            let allChecks = true;\n\n            allChecks = nameFilter ? (user.full_name.toLowerCase().includes(nameFilter.toLowerCase()) ? allChecks : false) : allChecks;\n\n            allChecks = emailFilter ? (user.email.toLowerCase().includes(emailFilter.toLowerCase()) ? allChecks : false) : allChecks;\n\n            allChecks = phoneFilter ? (user.us_phone_number.startsWith(phoneFilter) ? allChecks : false) : allChecks;\n\n            allChecks = subjectsFilter.length !== 0 ? ((user.tutor_subjects &&\n                subjectsFilter.every((element) => user.tutor_subjects.includes(element)))\n                || (user.problem_subjects && subjectsFilter.every((element) => user.problem_subjects.includes(element))) ? allChecks : false) : allChecks;\n\n            allChecks = usernameFilter ? (user.username.toLowerCase().includes(usernameFilter.toLowerCase()) ? allChecks : false) : allChecks;\n\n            allChecks = role ? (user.roles.includes(role) ? allChecks : false) : allChecks;\n\n            allChecks = availabilityFilter ? (availabilityCheck(user) ? allChecks : false) : allChecks;\n            return allChecks;\n        })\n\n\n        props.setUsers({ ...props.users, filtered: filtered, displayed: (props.offset + props.perPage >= filtered.length ? filtered.slice(props.offset, filtered.length) : filtered.slice(props.offset, props.offset + props.perPage)) })\n\n    }, [nameFilter, emailFilter, usernameFilter, phoneFilter, role, subjectsFilter, availabilityFilter])\n\n\n    const setCheckFilter = (value) => {\n        if (subjectsFilter.includes(value)) {\n            setSubjectsFilter(subjectsFilter.filter(element => element != value));\n        }\n        else {\n            setSubjectsFilter([...subjectsFilter, value])\n        }\n    }\n\n    const setRoleFilter = (e) => {\n        if (e.target.value === role) {\n            e.target.checked = false;\n            setRole(\"\");\n        }\n        else {\n            setRole(e.target.value);\n        }\n    }\n\n    const hookUpdateFunctions = {\n        \"setNameFilter\": setNameFilter,\n        \"setEmailFilter\": setEmailFilter,\n        \"setUsernameFilter\": setUsernameFilter,\n        \"setPhoneFilter\": setPhoneFilter,\n        \"setRoleFilter\": setRoleFilter,\n        \"setSubjectsFilter\": setCheckFilter,\n    }\n    return (\n        <div className=\"filtering\">\n            <Button\n                onClick={() => setOpen(!open)}\n                aria-controls=\"filter-form\"\n                aria-expanded={open}\n            >\n                Filter\n      </Button>\n            <Collapse in={open}>\n                <div id=\"filter-form\" >\n                    <Form className=\"form-comp\">\n                        <Row>\n                            <Col>\n                                <Form.Group>\n                                    <Form.Label>Name</Form.Label>\n                                    <FormControl className=\"search-input\" type=\"text\" name=\"setNameFilter\" onChange={inputChange} />\n                                    {decoded.rls.includes('admin') && (<div>\n                                        <Form.Label>Email</Form.Label>\n                                        <FormControl className=\"search-input\" type=\"text\" name=\"setEmailFilter\" onChange={inputChange} />\n                                    </div>)}\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Label>Username</Form.Label>\n                                <FormControl className=\"search-input\" type=\"text\" name=\"setUsernameFilter\" onChange={inputChange} />\n\n                                {decoded.rls.includes('admin') && (<div>\n                                    <Form.Label>Phone # (Stored in format xxx-xxx-xxxx)</Form.Label>\n                                    <FormControl className=\"search-input\" type=\"text\" name=\"setPhoneFilter\" onChange={inputChange} />\n                                </div>)}\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Subjects checkboxes={true} name=\"setSubjectsFilter\" onCheck={inputChange} />\n                        </Row>\n                        <Row>\n\n                            <DayPickerInput\n                                className=\"calendar\"\n                                format=\"M/D/YYYY\"\n                                name=\"setStartDateFilter\"\n                                id=\"date\"\n                                onDayChange={handleDayClick}\n                                value={availabilityFilter}\n                            />\n                        </Row>\n                        <Row>\n                            <Form.Group className=\"radios\" controlId=\"role\">\n                                <Form.Check\n                                    inline\n                                    value=\"tutor\"\n                                    name=\"setRoleFilter\"\n                                    label=\"Tutor\"\n                                    type=\"radio\"\n                                    id=\"tutor\"\n                                    onClick={setRoleFilter}\n                                />\n                                <Form.Check\n                                    inline\n                                    value=\"student\"\n                                    name=\"setRoleFilter\"\n                                    label=\"Student\"\n                                    type=\"radio\"\n                                    id=\"student\"\n                                    onClick={setRoleFilter}\n                                />\n                                <Form.Check\n                                    inline\n                                    value=\"student,tutor\"\n                                    name=\"setRoleFilter\"\n                                    label=\"Both\"\n                                    type=\"radio\"\n                                    id=\"both\"\n                                    onClick={setRoleFilter}\n                                />\n                            </Form.Group>\n                        </Row>\n                    </Form>\n                </div>\n            </Collapse>\n        </div>)\n}\n\n\nexport default Filters;","import React, { useState, useEffect } from 'react'\nimport { axios_instance } from '..'\nimport UserCard from './UserCard'\nimport ReactPaginate from 'react-paginate'\nimport { Form } from 'react-bootstrap'\nimport ReactLoading from 'react-loading';\nimport Filters from './Filters'\nimport {verifyJWT} from '../utility'\n//Add support for som1 who is tutor + student\nconst Dashboard = (props) => {\n  const jwt = verifyJWT();\n  const [userList, setUserlist] = useState({\n    userList: [],\n    filtered: [],\n    displayed: []\n  })\n\n  const [offset, setOffset] = useState(0)\n  const [loading, setLoading] = useState(true);\n\n  const [filters, setFilters] = useState({\n    username: '',\n    fullName: '',\n    subject: '',\n    type: ''\n  })\n\n  const perPage = 20;\n  const pageCount = Math.ceil(userList.userList.length) / perPage;\n\n\n  useEffect(() => {\n    const filtered = userList.userList.filter((user) => {\n      setLoading(true);\n      const usernameCheck = user.username.toLowerCase().includes(filters.username);\n      const subjectCheck = user.roles.includes(\"tutor\") && user.tutoring_subjects ? user.tutoring_subjects.includes(filters.subject) : user.problem_subjects ? user.problem_subjects.includes(filters.subject) : false;\n      const typeCheck = user.roles.includes(filters.type);\n      const fullNameCheck = user.full_name.toLowerCase().includes(filters.fullName.toLowerCase());\n      let allChecks = true;\n\n      if (filters.username) {\n        allChecks = allChecks && usernameCheck;\n      }\n      if (filters.subject) {\n        allChecks = allChecks && subjectCheck;\n      }\n      if (filters.fullName) {\n        allChecks = allChecks && fullNameCheck;\n      }\n      if (filters.type) {\n        allChecks = allChecks && typeCheck;\n      }\n      return allChecks\n    })\n    setLoading(false);\n    setUserlist({ ...userList, filtered: filtered, displayed: filtered.slice(0, perPage) })\n  }, [filters])\n\n\n  useEffect(() => {\n    if (jwt && jwt.rls.includes('student') && jwt.rls.includes('tutor') || jwt.rls.includes('admin')) {\n      axios_instance.get('http://127.0.0.1:5000/user')\n        .then((res) => {\n          return res.data.filter(user => user.username != props.username)\n        })\n        .then((response) => {\n          setUserlist({ ...userList, userList: response, filtered: response, displayed: response.slice(0, perPage) })\n        })\n        .then(() => {\n          setLoading(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    else if (jwt && jwt.rls.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then((res) => {\n          return res.data.filter(user => user.username != props.username)\n        })\n        .then(function (response) {\n          setUserlist({ ...userList, userList: response, filtered: response, displayed: response.slice(0, perPage) })\n        })\n        .then(() => {\n          setLoading(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n    else if (jwt && jwt.rls.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then((res) => {\n          return res.data.filter(user => user.username != jwt.username)\n        })\n        .then(function (response) {\n          setUserlist({ ...userList, userList: response, filtered: response, displayed: response.slice(0, perPage) })\n        })\n        .then(() => {\n          setLoading(false);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [])\n\n\n\n  const handlePageClick = (e) => {\n    let selected = e.selected;\n    setOffset(Math.ceil(selected * perPage));\n    setUserlist({ ...userList, displayed: perPage >= userList.filtered.length ? userList.filtered.slice(offset, userList.filtered.length) : userList.filtered.slice(offset, offset + 2) })\n  };\n\n\n  const userDash = userList.displayed.map((user) => {\n    return (\n      <UserCard className=\"user_card\" key={user._id.$oid} full_name={user.full_name} username={user.username} bio={user.biography} />\n    )\n  })\n\n  const setRoleFilter = (e) => {\n    setFilters({ ...filters, type: e.target.value })\n  }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <div>\n        <Filters users={userList} offset={offset} perPage={perPage} setUsers={setUserlist} />\n        {\n          jwt.rls.includes(\"tutor\") && jwt.rls.includes(\"student\") ? (\n            <Form className=\"form-comp\">\n              <Form.Group controlId=\"role\">\n                <Form.Check\n                  inline\n                  value=\"tutor\"\n                  name=\"role\"\n                  label=\"Tutor\"\n                  type=\"radio\"\n                  id=\"tutor\"\n                  onClick={setRoleFilter}\n                />\n                <Form.Check\n                  inline\n                  value=\"student\"\n                  name=\"role\"\n                  label=\"Student\"\n                  type=\"radio\"\n                  id=\"student\"\n                  onClick={setRoleFilter}\n                />\n              </Form.Group>\n              </Form>) : null\n         \n}\n      </div>\n\n      {loading && <ReactLoading type={\"spin\"} color={\"white\"} height={'10%'} width={'10%'} className=\"loading_spinner\" />}\n      {userDash.length != 0 ? <div className=\"userdash\">{userDash}</div> : <h3>No matching users found</h3>}\n\n\n      <ReactPaginate\n        pageCount={pageCount}\n        pageRangeDisplayed={5}\n        marginPagesDisplayed={5}\n        onPageChange={handlePageClick}\n        containerClassName={'pagination'}\n        subContainerClassName={'pages pagination'}\n        activeClassName={'active'}\n        previousLabel={'Previous'}\n        nextLabel={'Next'}\n        breakLabel={'...'}\n      />\n\n    </div >\n  )\n}\n\n\nexport default Dashboard;","import React from 'react';\nimport '../component_styling/homepage.scss';\nfunction HomePage() {\n\n\n\n  \n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <img src=\"/brain.png\" alt=\"logo\" />\n        <h1 className=\"fade-in\">JMSA Tutoring Services</h1>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n        </a>\n      </header>\n\n      <section className=\"align-odd\">\n        <h2>About Us</h2>\n        <p>\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. In lacinia justo vitae sapien laoreet suscipit. Cras eu justo vel turpis convallis pretium non ac nibh. Suspendisse nibh ante, luctus sed tellus ac, auctor lacinia orci. Curabitur et elit ac lectus accumsan rhoncus. Etiam faucibus sit amet felis ut eleifend. Phasellus quis rhoncus augue. Sed ac lectus pellentesque, dictum eros eu, blandit sapien. Fusce eget pretium erat, quis accumsan velit. Morbi vel libero a nunc commodo vehicula ac non elit. Quisque placerat et quam vel sagittis. Aenean ac dui vestibulum, sollicitudin ipsum et, pretium nulla.\n\nMaecenas eget bibendum purus. Nam faucibus metus nec commodo cursus. Sed vehicula porttitor sem at porta. Fusce sodales id quam sed elementum. Suspendisse vel orci ut eros sagittis rhoncus ac non sem. Proin rutrum laoreet libero, at lacinia ex elementum non. Etiam imperdiet quis mi at blandit. \n        </p>\n      </section>\n\n    </div>\n  );\n}\n\n\n<footer>\n<a href='https://pngtree.com/free-backgrounds'>free background photos from pngtree.com</a>\n</footer>\nexport default HomePage;\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { axios_instance } from '../index'\nimport { useHistory } from \"react-router-dom\";\nimport jwt from 'jsonwebtoken'\nconst LoginForm = (props) => {\n  let history = useHistory();\n  let [errors, setErrors] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const username = e.target.username.value;\n    const password = e.target.password.value;\n\n    const user = {\n      username,\n      password\n    }\n\n    const config = {\n      dataType: 'json',\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n\n    axios_instance.post('user/sign_in', user, config)\n      .then(function (response) {\n        if (response.data.access_token) {\n          jwt.verify(response.data.access_token, '/NJIBYUGHBYUHIKNBJBYBTGYIUJNBGFB/', () => {\n            localStorage.clear()\n            localStorage.setItem(\"token\", response.data.access_token);\n            history.push(\"/\")\n            window.location.reload(true)\n          })\n        }\n      })\n      .catch(function (error) {\n        setErrors('Invalid credentials')\n        console.log('err, ', error);\n      });\n  }\n\n  return (\n    <div className=\"form-comp\">\n      <h1>Log in </h1>\n      <Form onSubmit={handleSubmit}>\n        {errors || ''}\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Username\" />\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Password\" />\n        </Form.Group>\n        <span>Forgot password? Click<a href=\"/reset_password\"> Here</a></span>\n        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n      </Form>\n    </div>);\n}\n\n\n\nexport default LoginForm;","import React, {useState} from 'react';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav } from 'react-bootstrap'\nimport {Link, useHistory} from 'react-router-dom'\nimport {verifyJWT} from '../utility'\nconst NavBar = (props) => {\n    const jwt = verifyJWT()\n    const [username, setUsername] = useState(jwt && jwt.username)\n    const history = useHistory();\n    const logout = (e) =>{\n        e.preventDefault();\n        localStorage.clear()\n        history.push(\"/\")\n        setUsername(undefined)\n    }\n    \n \n    return (\n        <Navbar className=\"navbar\" collapseOnSelect expand=\"lg\" variant=\"dark\">\n            <LinkContainer to=\"/\">\n                <Navbar.Brand>JMSA Tutoring</Navbar.Brand>\n            </LinkContainer>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Nav>\n                   {username ? (\n                       <div >\n                    <LinkContainer style={{display:\"inline\"}} to=\"/dashboard\">\n                        <Nav.Link style={{display:\"inline\"}}> Dashboard</Nav.Link>\n                    </LinkContainer>\n                        <LinkContainer style={{display:\"inline\"}} to=\"/user/create_session\">\n                            <Nav.Link style={{display:\"inline\"}}>Create Session</Nav.Link>\n                        </LinkContainer>\n\n                        <LinkContainer style={{display:\"inline\"}} to={`/user/${username}/chat`}>\n                            <Nav.Link style={{display:\"inline\"}}>Chat</Nav.Link>\n                        </LinkContainer>\n\n                        <Navbar.Text style={{display:\"inline\"}}>Signed in as:\n                            <LinkContainer style={{display:\"inline\"}} to={`/user/${username}`}>\n                            <Nav.Link style={{display:\"inline\"}}>{username}</Nav.Link>\n                           </LinkContainer>\n                        </Navbar.Text>\n\n                        <Link to={'/'} style={{display:\"inline\"}} onClick={logout}>\n                            <Nav.Link style={{display:\"inline\"}}>Logout</Nav.Link>\n                        </Link>\n                       </div>) : (\n                    <div>\n                        <LinkContainer style={{display:\"inline\"}} to=\"/sign_in\">\n                            <Nav.Link>Login</Nav.Link>\n                        </LinkContainer>\n\n                        <LinkContainer style={{display:\"inline\"}} to=\"/sign_up\">\n                            <Nav.Link>Sign Up</Nav.Link>\n                        </LinkContainer>\n                    </div>)}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default NavBar;","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom'\nimport { Card, Button } from 'react-bootstrap';\nimport { parseDate, parseTime, verifyJWT } from '../utility'\nimport {axios_instance} from '../index'\nconst SessionListing = (props) => {\n  //wrong time\n  const mode = props.mode;\n  const jwt = verifyJWT();\n  const [confirmed, setConfirmed] = useState({\n\t  tutor_confirmed: props.session.tutor_confirmed,\n\t  student_confirmed: props.session.student_confirmed\n  });\n\n  if(jwt.username==props.session.tutor.username && !confirmed.tutor_confirmed){\n    console.log(\"T\")\n  }\n  else if ((jwt.username==props.session.student.username && !confirmed.student_confirmed)){\n    console.log(\"S\")\n  }\n\n  const confirmSession = () => {\n    let confirmation = {};\n    if(jwt.username==props.session.tutor.username){\n      confirmation.tutor_confirmed = true;\n    }\n    else if(jwt.username==props.session.student.username){\n      confirmation.student_confirmed = true;\n    }\n    axios_instance.post(`/user/sessions/${props.session._id.$oid}/edit`, confirmation)\n    .then((res)=>{\n     setConfirmed({tutor_confirmed: res.data.tutor_confirmed, student_confirmed: res.data.student_confirmed});\n    })\n    .catch((err)=>{\n      console.log(err)\n    })\n  }\n\n\n  //add captcha\n  return (\n    props.mode === \"card\" ?\n      (<div className=\"center\">\n        <Card className=\"card session\">\n          <Card.Body>\n            <Card.Title className=\"card-title\">{props.session.subject} Session with Student @{props.session.student.username}</Card.Title>\n            <Card.Text>\n              <span id=\"tutor\">Tutor: @{props.session.tutor.username}</span>\n              <p id=\"date\">{\n                parseDate(props.session.date.$date)\n              } to <span id=\"end_time\">{parseTime(props.session.end_time.$date)}</span></p>\n              <p>Confirmation Status: {(confirmed.tutor_confirmed && confirmed.student_confirmed) ? \"Confirmed\" : \"Not Confirmed\"} </p>\n\n              {\n                ((jwt.username==props.session.tutor.username && !confirmed.tutor_confirmed) || (jwt.username==props.session.student.username && !confirmed.student_confirmed)) && <a className=\"delete-link\" onClick={confirmSession}>Confirm</a>\n              }\n            </Card.Text>\n            <Link to={{\n              pathname: `/user/sessions/${props.session._id.$oid}/edit`,\n              state: {\n\n                session: props.session\n              }\n            }}>Edit\n        </Link>\n          </Card.Body>\n        </Card>\n      </div>) : (\n        <tr>\n          <td>{props.session.student.username}</td>\n          <td>{props.session.tutor.username}</td>\n          <td>{props.session.subject}</td>\n          <td>{parseDate(props.session.date.$date)}</td>\n          <td>{parseTime(props.session.end_time.$date)}</td>\n        </tr>)\n  )\n\n}\n\nexport default SessionListing;","import { useState, useEffect } from 'react';\nimport { Form, FormControl, Dropdown, Col, Row, Pagination } from 'react-bootstrap'\nimport TimePicker from 'react-time-picker';\nimport DayPicker from 'react-day-picker';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport Subjects from './Subjects'\n\nconst SessionFilters = (props) => {\n    const setTutorFilter = (e) => {\n        props.setFilters({ ...props.filters, tutorFilter: e.target.value });\n    }\n\n    const setStudentFilter = (e) => {\n        props.setFilters({ ...props.filters, studentFilter: e.target.value });\n    }\n\n    const handleDayClick = (day, { selected }) => {\n        const selectedDay = selected ? undefined : day;\n        props.setFilters({ ...props.filters, startDateFilter: selectedDay });\n    }\n\n    const setStartTimeFilter = (time) => {\n        props.setFilters({ ...props.filters, startTimeFilter: time });\n    }\n\n    const setEndTimeFilter = (time) => {\n        props.setFilters({ ...props.filters, endTimeFilter: time });\n    }\n\n    const setSubjectFilter = (eventKey) => {\n        props.setFilters({ ...props.filters, sessionSubjectFilter: eventKey })\n    }\n\n    return (\n        <Form className=\"form-comp\">\n            <Form.Group>\n                <Form.Label>Tutor Filter</Form.Label>\n                <FormControl className=\"search-input short\" type=\"text\" name=\"setTutorFilter\" onChange={setTutorFilter} />\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Label>Student Filter</Form.Label>\n                <FormControl className=\"search-input short\" type=\"text\" name=\"setDateFilter\" onChange={setStudentFilter} />\n            </Form.Group>\n            <div className=\"flex-form\">\n                <Form.Group>\n                    <Form.Label>Date Filter</Form.Label>\n                    <DayPickerInput\n                        className=\"calendar\"\n                        format=\"M/D/YYYY\"\n                        name=\"setStartDateFilter\"\n                        id=\"date\"\n                        onDayChange={handleDayClick}\n                        value={props.filters.startDateFilter}\n                    />\n                </Form.Group>\n\n                {props.filters.startDateFilter &&\n                    (\n                        <div >\n                            <Form.Group>\n                                <Form.Label>Start Time Filter</Form.Label>\n                                <TimePicker\n                                    name=\"setTimePicker\"\n                                    id=\"end_time\"\n                                    onChange={setStartTimeFilter}\n                                    value={props.filters.startTimeFilter}\n                                    disableClock={true}\n                                />\n                                <Form.Label>End Time Filter</Form.Label>\n                                <TimePicker\n                                    name=\"setTimePicker\"\n                                    id=\"end_time\"\n                                    minTime={props.filters.startTimeFilter}\n                                    value={props.filters.endTimeFilter}\n                                    onChange={setEndTimeFilter}\n                                    disableClock={true}\n                                />\n                            </Form.Group>\n                        </div>\n                    )\n                }\n                <Subjects onSelect={setSubjectFilter} subject={props.filters.sessionSubjectFilter}/>\n            </div>\n        </Form>\n    )\n\n}\n\nexport default SessionFilters;","import React, { useEffect, useState } from 'react'\nimport { propTypes } from 'react-bootstrap/esm/Image';\nimport { useParams } from 'react-router-dom'\nimport { axios_instance } from '..'\nimport SessionListing from './SessionListing';\nimport SessionFilters from './SessionFilters'\nimport ReactPaginate from 'react-paginate'\n\nconst UserSessions = (props) => {\n    let { username } = useParams();\n    const perPage = props.perPage ? props.perPage : 1;\n    const [sessions_list, set_sessions_list] = useState({\n        raw_sessions: [],\n        displayed_sessions: [],\n        filtered: []\n    })\n    //Filtered is not neeeded with offset\n    //Put session list in var and change it when offset state changes\n    const [offset, setOffset] = useState(0)\n    const [filters, setFilters] = useState({\n        tutorFilter: '',\n        studentFilter: '',\n        sessionSubjectFilter: '',\n        startDateFilter: null,\n        startTimeFilter: null,\n        endTimeFilter: null\n    })\n    const pageCount = Math.ceil(sessions_list.filtered.length) / perPage;\n\n    const formatDateTime = (date, time) => {\n        const month = date.getMonth() < 10 ? \"0\" + (date.getMonth() + 1) : (date.getMonth() + 1);\n        const day = date.getDate() < 10 ? \"0\" + date.getDate() : date.getDate();\n        const formattedDate = date.getFullYear() + \"-\" + month + \"-\" + day;\n        const formattedTime = \"T\" + time + \":00\"\n        return new Date(formattedDate + formattedTime);\n    }\n\n    useEffect(() => {\n        const filteredSessions = sessions_list.raw_sessions.filter((session) => {\n            let allChecks = true;\n            allChecks = filters.tutorFilter ? (session.tutor.username.includes(filters.tutorFilter) ? allChecks : false) : allChecks;\n            allChecks = filters.studentFilter ? (session.student.username.includes(filters.studentFilter) ? allChecks : false) : allChecks;\n            if (filters.startDateFilter) {\n                const sessionDate = new Date(session.date.$date);\n                const sameDate = filters.startDateFilter.getDate() == sessionDate.getDate()\n                    && filters.startDateFilter.getFullYear() == sessionDate.getFullYear()\n                    && filters.startDateFilter.getMonth() == sessionDate.getMonth();\n                allChecks = sameDate ? allChecks : false\n\n                if (filters.startTimeFilter) {\n                    const startDateTime = formatDateTime(filters.startDateFilter, filters.startTimeFilter);\n                    allChecks = sameDate && startDateTime.getHours() == sessionDate.getHours() && startDateTime.getMinutes() == sessionDate.getMinutes() ? allChecks : false\n                }\n\n                if (filters.endTimeFilter) {\n                    const endDateTime = formatDateTime(filters.startDateFilter, filters.endTimeFilter);\n                    const sessionEndDate = new Date(session.end_time.$date)\n                    allChecks = sameDate && endDateTime.getHours() == sessionEndDate.getHours() && endDateTime.getMinutes() == sessionEndDate.getMinutes() ? allChecks : false\n                }\n            }\n            allChecks = filters.sessionSubjectFilter ? (filters.sessionSubjectFilter == session.subject ? allChecks : false) : allChecks;\n            return allChecks;\n\n        })\n\n        set_sessions_list({ ...sessions_list, displayed_sessions: perPage >= filteredSessions.length ? filteredSessions.slice(offset, filteredSessions.length) : filteredSessions.slice(offset, offset + perPage), filtered: filteredSessions })\n    }, [filters.studentFilter, filters.tutorFilter, filters.startDateFilter, filters.startTimeFilter, filters.endTimeFilter, filters.sessionSubjectFilter])\n\n\n\n\n    useEffect(() => {\n        const config = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n        if (username) {\n            axios_instance.get(`http://127.0.0.1:5000/user/${username}/sessions`, config)\n                .then((res) => {\n                    console.log(res.data)\n                    set_sessions_list({\n                        raw_sessions: res.data,\n                        displayed_sessions: res.data.slice(0, perPage),\n                        filtered: res.data\n                    })\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n        else {\n            axios_instance.get(`http://127.0.0.1:5000/sessions`, config)\n                .then((res) => {\n                    set_sessions_list({\n                        raw_sessions: res.data,\n                        displayed_sessions: res.data.slice(0, perPage),\n                        filtered: res.data\n                    })\n                })\n                .catch((err) => {\n                    console.log(err)\n                })\n        }\n    }, [])\n\n    //Update display when page clicked\n    useEffect(() => {\n        set_sessions_list({ ...sessions_list, displayed_sessions: offset + perPage >= sessions_list.filtered.length ? sessions_list.filtered.slice(offset, sessions_list.filtered.length) : sessions_list.filtered.slice(offset, offset + perPage) })\n    }, [offset])\n\n    const handlePageClick = (e) => {\n        let selected = e.selected;\n        setOffset(Math.ceil(selected * perPage));\n    };\n\n    const sessions = sessions_list.displayed_sessions.map((session) => (\n        <SessionListing key={session._id.$oid} session={session} mode={!username ? \"listing\" : \"card\"} />\n    ))\n\n    return (\n        <div>\n            <div>\n                {!username && <SessionFilters sessions={sessions_list.raw_sessions} filters={filters} setFilters={setFilters} />}\n                {sessions.length !== 0 ? !username ? (\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Student</th>\n                                <th>Tutor</th>\n                                <th>Subject</th>\n                                <th>Start Time</th>\n                                <th>End Time</th>\n                            </tr>\n                            </thead>\n                            <tbody>\n                            {sessions}\n                            </tbody>\n                    </table>\n                ) : sessions : <h3>No sessions scheduled</h3>}\n            </div>\n            <ReactPaginate\n                pageCount={pageCount}\n                pageRangeDisplayed={5}\n                marginPagesDisplayed={5}\n                onPageChange={handlePageClick}\n                containerClassName={'pagination'}\n                subContainerClassName={'pages pagination'}\n                activeClassName={'active'}\n                previousLabel={'Previous'}\n                nextLabel={'Next'}\n                breakLabel={'...'}\n            />\n        </div>\n    )\n}\n\nexport default UserSessions;","import React, { useEffect, useState } from 'react'\nimport { Link, useParams } from \"react-router-dom\";\nimport { axios_instance } from '../index'\nimport DayPicker from \"react-day-picker\";\nimport UserSessions from './UserSessions';\nimport { Row, Col, Container } from 'react-bootstrap'\nimport ReactLoading from 'react-loading';\nimport { verifyJWT } from '../utility';\nimport axios from 'axios';\n//View for viewing own profile and someone else viewing profile\nconst Profile = () => {\n    let { username } = useParams();\n    const [user, set_user] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    const jwt = verifyJWT();\n\n    useEffect(() => {\n        const config = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n\n\n        axios_instance.get(`/user/${username}`, config)\n            .then((res) => {\n                const parsed_dates = res.data.availability.map((date) => {\n                    const milliseconds = date.$date;\n                    const parsed_date = new Date(milliseconds)\n                    return parsed_date;\n                })\n                res.data.availability = parsed_dates;\n                set_user(res.data);\n            })\n            .then(() => {\n                setLoading(false);\n            })\n    }, [])\n\n    const addDefaultSrc = (e) => {\n        e.preventDefault();\n        console.log(e.target)\n        e.target.src = `http://localhost:5000/profile_pictures/placeholder.jpg`\n    }\n    return (\n        <div>\n            <div>\n                {loading && <ReactLoading type={\"spin\"} color={\"white\"} height={'10%'} width={'10%'} className=\"loading_spinner\" />}\n                <h1>{user.full_name}</h1>\n                {user.profile_picture ? <img className=\"profile_picture\" src={`http://localhost:5000/${user.profile_picture}`} onError={addDefaultSrc} alt=\"Profile Picture\"></img> : <img className=\"profile_picture\" src=\"http://localhost:5000/profile_pictures/placeholder.jpg\"></img>}\n                <h2 className=\"subtitle\">@{username}</h2>\n                <p>{username != jwt.username && <Link to={{ pathname: `/user/${jwt.username}/chat` }}>Chat</Link>}</p>\n                {\n                    (username == jwt.username || jwt.rls.includes('admin')) && (\n                        <Link to={{\n                            pathname: `/user/${username}/edit`,\n                            state: {\n                                user: {\n                                    ...user\n                                }\n                            }\n                        }}>Edit\n                        </Link>)\n                }\n                <div className=\"about-div\">\n                    <p className=\"bio\">{user.biography}</p>\n                </div>\n                <hr />\n\n                {jwt && username == jwt.username || jwt.rls.includes('admin') ?\n                        <div className=\"profile-items\">\n                            <div className=\"calendar-container\">\n                                <h3>Availability</h3>\n                                <DayPicker\n                                    className=\"calendar\"\n                                    format=\"MM/DD/YYYY\"\n                                    selectedDays={user.availability}\n                                    name=\"availability\"\n                                />\n                            </div>\n                            <div className=\"user_sessions\">\n                                {(username == jwt.username || jwt.rls.includes('admin')) ? <div><h3>Sessions</h3><UserSessions /></div> : ''}\n                            </div>\n                        </div>\n                    : <div>\n                        <h3>Availability</h3>\n                        <DayPicker\n                            className=\"calendar\"\n                            format=\"MM/DD/YYYY\"\n                            selectedDays={user.availability}\n                            name=\"availability\"\n                        />\n                    </div>}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Profile;","import { React, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap'\nimport DayPicker, { DateUtils } from \"react-day-picker\";\nimport axios from 'axios'\n\nconst SignUpForm = () => {\n  const [dates, setDates] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [role, setRole] = useState('');\n  const [submitted, setSubmitted] = useState(false);\n  const [bestSubjects, setBestSubjects] = useState([]);\n  const [problemSubjects, setProblemSubjects] = useState([]);\n\n  const requiredFields = [\"role\", \"full_name\", \"username\", \"password\", \"us_phone_number\"]\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    errorChecker(e);\n    if (errors.length === 0) {\n      const email = e.target.email.value;\n      const full_name = e.target.full_name.value;\n      const username = e.target.username.value;\n      const password = e.target.password.value;\n      const biography = e.target.biography ? e.target.biography.value : '';\n      const us_phone_number = e.target.us_phone_number.value;\n      const meeting_link = e.target.meeting_link ? e.target.meeting_link.value : ' ';\n      const profile_picture = e.target.profile_picture.files[0];\n\n      const bodyFormData = new FormData();\n\n      bodyFormData.append(\"email\", email);\n      bodyFormData.append('full_name', full_name);\n      bodyFormData.append('password', password);\n      bodyFormData.append('us_phone_number', us_phone_number);\n      bodyFormData.append('profile_picture', profile_picture);\n      bodyFormData.append('biography', biography)\n      bodyFormData.append('username', username);\n      bodyFormData.append('availability', dates.map((date) => {\n        console.log(date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear())\n        return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear();\n      }));\n\n      if (role.includes(\"tutor\")) {\n        bodyFormData.append('meeting_link', meeting_link);\n        bodyFormData.append('tutor_subjects', bestSubjects);\n      }\n\n      if (role.includes(\"student\")) {\n        bodyFormData.append('problem_subjects', problemSubjects);\n      }\n\n      setSubmitted(true);\n      axios.post('http://127.0.0.1:5000/user/sign_up', bodyFormData)\n        .then(function (response) {\n          console.log(response);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }\n\n  const updateRole = (e) => {\n    setRole(e.target.value)\n  }\n\n  const errorChecker = (e) => {\n    let errors = false;\n    if (!role) {\n      errors = true;\n      setErrors([...errors, \"Role required.\"])\n    }\n\n    if(!e.target.email.value){\n      errors = true;\n      setErrors([...errors, \"Email required.\"])\n    }\n\n    if(!e.target.full_name.value){\n      setErrors([...errors, \"Full name required.\"])\n    }\n\n    if(!e.target.username.value){\n      setErrors([...errors, \"Username required.\"])\n    }\n\n    if(!e.target.us_phone_number.value){\n      setErrors([...errors, \"Phone number required.\"])\n    }\n\n  }\n  const handleDayClick = (day, { selected }) => {\n    const arr = [...dates];\n    if (selected) {\n      const selectedIndex = arr.findIndex(selectedDay =>\n        DateUtils.isSameDay(selectedDay, day)\n      );\n      arr.splice(selectedIndex, 1);\n      setDates(arr);\n    }\n    else {\n      setDates([...dates, day]);\n    }\n  }\n\n  const conditionalSubjectType = () => {\n    let returnedTypes = [];\n    const tutor = (\n      <div>\n        <Form.Group controlId=\"conditional\">\n          <Form.Group controlId=\"meeting_link\">\n            <Form.Label>*Meeting Link</Form.Label>\n            <Form.Control type=\"text\" />\n          </Form.Group>\n          <Form.Group controlId=\"subjects\">\n            <Form.Label>Best Subjects</Form.Label>\n            {subjects(false)}\n          </Form.Group>\n        </Form.Group>\n      </div>\n    )\n\n    const student =\n      (<Form.Group controlId=\"problem_subjects\">\n        <Form.Label>Problem Subjects</Form.Label>\n        {subjects(true)}\n      </Form.Group>)\n\n    if (role.includes(\"tutor\")) {\n      returnedTypes.push(tutor);\n    }\n\n    if (role.includes(\"student\")) {\n      returnedTypes.push(student);\n    }\n\n    return returnedTypes;\n\n  }\n\n  const conditionalCheck = (problem) => {\n    let onCheckChange;\n    if (!problem) {\n      onCheckChange = (e) => {\n        if (bestSubjects.includes(e.target.value)) {\n          setBestSubjects(bestSubjects.filter(element => element != e.target.value));\n          console.log(bestSubjects);\n        }\n        else {\n          setBestSubjects([...bestSubjects, e.target.value])\n          console.log(bestSubjects);\n        }\n\n      }\n    }\n    else {\n      onCheckChange = (e) => {\n        if (problemSubjects.includes(e.target.value)) {\n          setProblemSubjects(problemSubjects.filter(element => element != e.target.value));\n          console.log(problemSubjects);\n        }\n        else {\n          setProblemSubjects([...problemSubjects, e.target.value]);\n          console.log(problemSubjects);\n        }\n      }\n    }\n\n    return onCheckChange;\n  }\n\n  const subjects = (problem) => {\n    const subjects = ['Math', 'Physics', 'Chemistry', 'Biology', 'English', 'History', 'Computer Science']\n    let id = problem ? \"problem\" : \"best\"\n    return (\n      <div>\n        <Form.Group controlId={`math ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Math\" label=\"Math\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`physics ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Physics\" label=\"Physics\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`chemistry ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Chemistry\" label=\"Chemistry\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`biology ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Biology\" label=\"Biology\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`english ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"English\" label=\"English\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`history ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"History\" label=\"History\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n        <Form.Group controlId={`compsci ${id}`}>\n          <Form.Check type=\"checkbox\" value=\"Computer Science\" label=\"Computer Science\" onChange={conditionalCheck(problem)} />\n        </Form.Group>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"form-comp\">\n      <h1>Sign Up</h1>\n\n      {errors && <span className=\"form-error\">{errors}</span>}\n      {submitted && errors.length === 0 ? <span className=\"form-text\">Please check your email to finish activating your account.</span> : null}\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control name=\"email\" type=\"email\" required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"full_name\">\n          <Form.Label>Full Name</Form.Label>\n          <Form.Control name=\"full_name\" type=\"text\" required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control name=\"username\" type=\"text\" required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control name=\"password\" type=\"password\" required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"us_phone_number\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control name=\"us_phone_number\" type=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" required />\n        </Form.Group>\n\n        <Form.Group controlId=\"biography\">\n          <Form.Label>Tell us about yourself!</Form.Label>\n          <Form.Control name=\"biography\" as=\"textarea\" rows={3} />\n        </Form.Group>\n\n        {conditionalSubjectType()}\n        <Form.Group controlId=\"role\">\n          <Form.Check\n            inline\n            value=\"tutor\"\n            name=\"role\"\n            checked={role === \"tutor\"}\n            label=\"Tutor\"\n            type=\"radio\"\n            id=\"tutor\"\n            onClick={updateRole}\n          />\n          <Form.Check\n            inline\n            value=\"student\"\n            name=\"role\"\n            checked={role === \"student\"}\n            label=\"Student\"\n            type=\"radio\"\n            id=\"student\"\n            onClick={updateRole}\n          />\n          <Form.Check\n            inline\n            value=\"student,tutor\"\n            name=\"role\"\n            checked={role === \"student,tutor\"}\n            label=\"Both\"\n            type=\"radio\"\n            id=\"both\"\n            onClick={updateRole}\n          />\n        </Form.Group>\n\n        <Form.Label>Profile Picture</Form.Label>\n        <input accept=\".jpg,.png,.jpeg\" type=\"file\" name=\"profile_picture\" />\n\n        <Form.Group controlId=\"availability\">\n          <Form.Label>*Availability</Form.Label>\n\n          <DayPicker\n            className=\"calendar\"\n            disabledDays={{ before: new Date() }}\n            format=\"MM/DD/YYYY\"\n            name=\"availability\"\n            onDayClick={handleDayClick}\n            selectedDays={dates}\n          />\n\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n\n      </Form>\n\n    </div>);\n}\n\nexport default SignUpForm;","import React, { useEffect, useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useParams, useHistory } from \"react-router-dom\";\nimport{ DateUtils } from \"react-day-picker\";\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { axios_instance } from '..';\nimport { verifyJWT } from '../utility';\n\nconst EditUser = (props) => {\n  let { username } = useParams();\n  const jwt = verifyJWT()\n\n  const history = useHistory();\n  const [dates, setDates] = useState([])\n  const [user, set_user] = useState({});\n\n\n  useEffect(() => {\n    if(props && props.location &&  props.location.state.user) {\n      set_user(props.location.state.user)\n    }\n    else {\n    axios_instance.get(`/user/${username}`).then((res) => {\n      set_user(res.data);\n    })\n  }\n  }, [])\n\n  const handleChange = (e) => {\n    const updated_user = {\n      ...user,\n      [e.target.id]: e.target.value\n    }\n    set_user(updated_user)\n  }\n\n  const deleteUser = () => {\n    history.push(\"/\");\n    axios_instance.delete(`http://127.0.0.1:5000/user/${username}/edit`)\n    .catch((err)=>{\n      console.log(err)\n    })\n\n  }\n\n  const handleDayClick = (day, { selected }) => {\n    if (selected) {\n      const selectedIndex = dates.findIndex(selectedDay =>\n        DateUtils.isSameDay(selectedDay, day)\n      );\n      dates.splice(selectedIndex, 1)\n      setDates(dates)\n    }\n    else {\n      setDates([...dates, day])\n    }\n  }\n\n  const parse_dates = (date_list) => {\n    console.log(date_list)\n    return date_list.map((date) => {\n      return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear()\n    })\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let parsed_availability = ''\n    if (dates.length!==0) {\n     parsed_availability = parse_dates(user.availability);\n    }\n    const edited_user = {\n      email: user.email,\n      full_name: user.full_name,\n      username: user.username,\n      biography: user.biography,\n      roles: user.roles,\n      availability: parsed_availability,\n      us_phone_number: user.us_phone_number\n    }\n    const config = {\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    }\n    axios_instance.post(`http://127.0.0.1:5000/user/${username}/edit`, edited_user, config)\n      .then(function (res) {\n        if(jwt.username==username){\n        localStorage.setItem(\"token\", res.data.access_token)\n        }\n        history.push(\"/\");\n        window.location.reload(true)\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n\n  return (\n    <div >\n      <h1>Edit</h1>\n      <Form className=\"form-comp\" onSubmit={handleSubmit}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" value={user.email || ' '} onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" value={user.username || ' '} onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"us_phone_number\">\n          <Form.Label>Phone Number</Form.Label>\n          <Form.Control type=\"tel\" pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" value={user.us_phone_number || ''} onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"biography\">\n          <Form.Label>Tell us about yourself!</Form.Label>\n          <Form.Control as=\"textarea\" rows={3} value={user.biography || ' '} onChange={handleChange} />\n        </Form.Group>\n\n        <Form.Group controlId=\"role\">\n          <Form.Check\n            inline\n            value=\"tutor\"\n            name=\"roles\"\n            label=\"Tutor\"\n            type=\"radio\"\n            id=\"roles\"\n            onClick={handleChange}\n          />\n          <Form.Check\n            inline\n            value=\"student\"\n            name=\"role\"\n            label=\"Student\"\n            type=\"radio\"\n            id=\"roles\"\n            onClick={handleChange}\n          />\n\n          <Form.Check\n            inline\n            value=\"student,tutor\"\n            name=\"role\"\n            label=\"Both\"\n            type=\"radio\"\n            id=\"both\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"availability\">\n          <Form.Label>Availability</Form.Label>\n          <DayPickerInput\n            className=\"calendar\"\n            format=\"MM/DD/YYYY\"\n            name=\"availability\"\n            onDayClick={handleDayClick}\n            selectedDays={dates}\n          />\n\n        </Form.Group>\n        <Form.Group>\n          <a className=\"delete-link\" onClick={deleteUser}>Delete</a>\n        </Form.Group>\n        <Form.Group>\n          <span>Forgot password? Click<a href=\"/reset_password\"> Here</a></span>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>);\n}\n\nexport default EditUser;\n\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button, Dropdown } from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { axios_instance } from '..';\nimport Select from 'react-select'\nimport \"../../node_modules/react-time-picker/dist/TimePicker.css\";\nimport \"../../node_modules/react-clock/dist/Clock.css\";\nimport TimePicker from 'react-time-picker'\nimport Subjects from './Subjects';\n\n\nconst EditSessionForm = (props) => {\n  const history = useHistory();\n  const [endTime, setEndTime] = useState('');\n  const [time, setTime] = useState('');\n  const [session, setSession] = useState(props.location.state.session);\n  const [errors, setErrors] = useState('');\n  const handleErrors = () => {\n    if (!time || !endTime || time > endTime) {\n      setErrors('Invalid time');\n    }\n    else {\n      setErrors('')\n    }\n    return errors;\n  }\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    handleErrors();\n    if (!errors) {\n      const endDateTime = formatDateTime(session.date, endTime);\n      const startDateTime = formatDateTime(session.date, time)\n      const edited_session = {\n        ...session,\n        end_time: endDateTime,\n        date: startDateTime,\n      }\n\n      const config = {\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      }\n\n      axios_instance.post(`/user/sessions/${session._id.$oid}/edit`, { ...edited_session, tutor_confirmed: false, student_confirmed: false }, config)\n        .then(() => {\n          history.push(`/`)\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }\n\n\n  const handleDayClick = (day, { selected }) => {\n    const selectedDay = selected ? undefined : day;\n    const updated_session = { ...session, date: selectedDay }\n    setSession(updated_session);\n  }\n\n  const onTimeChange = (time) => {\n    setTime(time);\n  }\n\n  const onEndTimeChange = (time) => {\n    setEndTime(time);\n  }\n  const formatDateTime = (date, time) => {\n    const hour = parseInt(time.substring(0, 1)) == 0 ? parseInt(time.substring(1, 2)) : parseInt(time.substring(0, 2))\n    const minutes = time.substring(2)\n\n\n    const amPM = hour < 12 ? 'AM' : 'PM'\n    const formatted_hour = hour > 12 ? hour - 12 : hour < 10 ? \"0\" + hour : hour;\n    time = formatted_hour + minutes + \" \" + amPM\n\n    return date.getMonth() + 1 + \"/\" + date.getDate() + \"/\" + date.getFullYear() + \" \" + time;\n  }\n\n  const onDropdownSelect = (eventKey) => {\n    setSession({ ...session, subject: eventKey });\n  }\n\n  const handleChange = (e) => {\n    const updated_session = {\n      ...session,\n      [e.target.id]: e.target.value\n    }\n    setSession(updated_session)\n  }\n\n  return (\n    <div className=\"form-comp-container\">\n      <div className=\"form-comp\">\n        <h1>Edit Session</h1>\n        <span className=\"errors\">{errors}</span>\n        <Form onSubmit={handleSubmit}>\n          <Subjects onSelect={onDropdownSelect} subject={session.subject} />\n          <Form.Group controlId=\"tutor\">\n            <Form.Label>Tutor</Form.Label>\n            <Form.Control type=\"text\" value={session.tutor.username} />\n          </Form.Group>\n\n          <Form.Group controlId=\"student\">\n            <Form.Label>Student</Form.Label>\n            <Form.Control type=\"text\" value={session.student.username} />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Date</Form.Label>\n            <DayPickerInput\n              className=\"calendar\"\n              // disabledDays={{ before: new Date() }}\n              format=\"M/D/YYYY\"\n              name=\"date\"\n              id=\"date\"\n              onDayClick={handleDayClick}\n              selectedDays={new Date(session.date)}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label className=\"block-label\">Start Time</Form.Label>\n            <TimePicker\n              name=\"time\"\n              id=\"time\"\n              disableClock={true}\n              onChange={onTimeChange}\n              value={time}\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label className=\"block-label\">End Time</Form.Label>\n            <TimePicker\n              name=\"end_time\"\n              id=\"end_time\"\n              disableClock={true}\n              onChange={onEndTimeChange}\n              value={endTime}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    </div>);\n}\n\n\nexport default EditSessionForm;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { axios_instance } from '..';\nimport Select from 'react-select';\nimport jwt_decode from 'jwt-decode'\nimport ReactLoading from 'react-loading';\nimport ReactPaginate from 'react-paginate';\nimport {parseDate, verifyJWT} from '../utility'\nimport socket from '../index'\n\nconst Chat = () => {\n  const jwt = verifyJWT();\n  const { username } = useParams();\n  const [messages, set_messages] = useState({\n    displayed: [],\n    messages: []\n  });\n  const [user_list, set_user_list] = useState([]);\n  const [recipient, set_recipient] = useState(undefined);\n  const [loading, setLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const perPage = 30;\n  let pageCount = Math.ceil(messages.messages.length) / perPage;\n\n  useEffect(()=>{\n    console.log(messages.messages, messages.messages.slice(offset, offset + perPage))\n   set_messages({\n     ...messages,\n     displayed: (offset + perPage >= messages.messages.length ? messages.messages.slice(offset, messages.messages.length) : messages.messages.slice(offset, offset + perPage))\n   })\n  }, [offset])\n\n \n  const config = {\n    xhrFields: {\n      withCredentials: true\n    },\n    crossDomain: true,\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  }\n\n  useEffect(() => {\n    if (jwt.rls.includes('student') && jwt.rls.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user')\n        .then(function (response) {\n          return response.data.filter(user => user.username != username)\n        })\n        .then((res) => {\n          set_user_list([...user_list, ...res])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    else if (jwt.rls.includes('tutor')) {\n      axios_instance.get('http://127.0.0.1:5000/user/students')\n        .then(function (response) {\n          return response.data.filter(user => user.username != username)\n        })\n        .then((res) => {\n          set_user_list([...user_list, ...res])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n\n    else if (jwt.rls.includes('student')) {\n      axios_instance.get('http://127.0.0.1:5000/user/tutors')\n        .then(function (response) {\n          return response.data.filter(user => user.username != username)\n        })\n        .then((res) => {\n          set_user_list([...user_list, ...res])\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [])\n\n  useEffect(() => {\n    if (recipient && recipient.username != undefined) {\n      new Promise((resolve, reject) => {\n        resolve(setLoading(true))\n        setOffset(0);\n      })\n        .then\n        (() => axios_instance.get(`http://127.0.0.1:5000/user/${username}/chat/${recipient._id.$oid}`, config))\n        .then((res) => {\n          if (res.data) {\n            set_messages({displayed: (offset + perPage >= res.data.length ? res.data.slice(offset, res.data.length) : res.data.slice(offset, offset + perPage)), messages: [...res.data]});\n          }\n        })\n        .then(() => {\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    }\n  }, [recipient])\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const message = {\n      recipient: recipient._id.$oid,\n      body: e.target.message.value,\n      sender: jwt_decode(localStorage.getItem(\"token\")).id\n    }\n\n    axios_instance.post(`http://127.0.0.1:5000/user/${username}/chat/${recipient._id.$oid}`, message, config)\n      .then((res) => {\n        const newArr = [...messages.messages, res.data]\n        set_messages({\n          displayed: (offset + perPage >= newArr.length ? newArr.slice(offset, newArr.length) : newArr.slice(offset, offset + perPage)),\n          messages: newArr});\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n\n  }\n\n  const handleSelect = (selected) => {\n    const selectedUser = selected==recipient ? undefined : selected;\n    set_recipient(selectedUser)\n    set_messages({\n      displayed: [],\n      messages: []\n    })\n  }\n\n  const handlePageClick = (e) => {\n    let selected = e.selected;\n    let offset = Math.ceil(selected * perPage);\n    setOffset(offset);\n  };\n\n  const message_list = messages.displayed.map((message) => {\n\n    let message_class = recipient._id.$oid == message.sender.$oid ? \"recieved\" : \"sent\";\n\n    const date = new Date(message.timestamp.$date);\n\n    const timestamp = parseDate(date)\n\n    return (\n      <div className={`message ${message_class}`}>\n        <span className=\"message_text\">{message.body}</span>\n        <span className=\"message_time\">{timestamp}</span>\n\n      </div>)\n  })\n\n\n socket.on('msg', (msg)=>{\n    set_messages({...messages,  messages: [...messages.messages, msg]});\n  })\n  return (\n    <Form onSubmit={handleSubmit} className=\"form-comp\">\n      {recipient ? <div>\n        <h2 class=\"username\">{recipient.username}</h2>\n        {loading && <ReactLoading type={\"spin\"} color={\"white\"} height={'10%'} width={'10%'} className=\"loading_spinner\" />}\n        <div >{message_list.length !== 0 ?\n          <div className=\"message_list\">\n            {message_list}\n            < ReactPaginate\n              pageCount={pageCount}\n              pageRangeDisplayed={5}\n              marginPagesDisplayed={5}\n              onPageChange={handlePageClick}\n              containerClassName={'pagination'}\n              subContainerClassName={'pages pagination'}\n              activeClassName={'active'}\n              previousLabel={'Previous'}\n              nextLabel={'Next'}\n              breakLabel={'...'}\n            />\n          </div> :\n          <span class=\"flavor-text\">Start a conversation</span>}</div>\n      </div>\n        : <div> <h1>Chat</h1><span class=\"flavor-text\">Select someone to chat with.</span></div>}\n\n      <div className=\"message-form-input\">\n        <div>\n          <Select\n            menuPortalTarget={document.querySelector('body')}\n            maxMenuHeight={220}\n            classNamePrefix=\"react-select\"\n            className=\"select center\"\n            onChange={handleSelect}\n            options={user_list}\n            getOptionLabel={(option) => option.username}\n            getOptionValue={(option) => option._id}\n          />\n        </div>\n        {recipient && (\n          <div>\n            <Form.Group controlId=\"message\">\n              <Form.Control type=\"text\" placeholder=\"Message\" />\n            </Form.Group>\n            <Button type=\"submit\">Send</Button>\n          </div>)}\n      </div>\n    </Form>\n  )\n}\n\nexport default Chat;","import React, { useEffect} from 'react'\nimport {useLocation, useHistory} from 'react-router-dom'\nimport axios from 'axios'\n\nconst EmailRegistration = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const token = location.search.substr(7);\n    console.log(token)\n    const config = {\n        crossDomain: true,\n        headers: {\n          'Authorization':  ` Bearer ${token}`\n      }\n      }\n    useEffect(()=>{\n        axios.get('http://127.0.0.1:5000/finalize', config)\n       .then((res)=>{\n            // if(res.data.access_token){\n                setTimeout(()=>{\n                    localStorage.clear()\n                    localStorage.setItem(\"token\", res.data.access_token);\n                    history.push(\"/\")\n                    window.location.reload(true)\n                }, 2000)\n           // }\n        })\n        .catch((err)=>{\n            console.log(token)\n            console.log(err);\n        })\n\n    }, [])\n    return (\n    <div>\n        <h1>Successful registration</h1>\n        <p>Redirecting home...</p>\n    </div>)\n}\n\nexport default EmailRegistration;","\nimport React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport axios from 'axios'\n\nconst PasswordReset = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const token = location.search.substr(7);\n    const [passwordEmailSent, setPasswordEmailSent] = useState(false)\n    const resetPassword = (e) => {\n        e.preventDefault();\n        const config = {\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            }\n        }\n\n        axios.post('http://127.0.0.1:5000/reset_password', { password: e.target.new_pass.value, confirmNewPassword: e.target.confirm_new_pass.value }, config)\n            .then((res) => {\n                history.push(`/`)\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    const sendResetEmail = (e) => {\n        const config = {\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        e.preventDefault();\n        const data = {\n            email: e.target.email.value\n        }\n        axios.post('http://127.0.0.1:5000/send_password_email', data, config)\n            .then((res) => {\n                setPasswordEmailSent(true);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n    }\n\n    return (\n        <div>\n            <h1>Reset Your Password</h1>\n            { token ?\n                (\n\n                    <Form onSubmit={resetPassword}>\n                        <Form.Group controlId=\"new_pass\">\n                            <Form.Label>New password</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"confirm_new_pass\">\n                            <Form.Label>Confirm new password</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n                        <Button type=\"submit\">Submit</Button>\n                    </Form>\n                )\n                :\n                (\n                    <Form onSubmit={sendResetEmail}>\n                        {passwordEmailSent && <span className=\"flavor_text\">Password Reset Email Sent</span>}\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control />\n                        </Form.Group>\n                        <Button type=\"submit\">Send</Button>\n                    </Form>)\n            }\n        </div>\n    )\n}\n\nexport default PasswordReset;","import { useState, useEffect } from 'react'\nimport { axios_instance } from '../index'\nimport {subjects} from './Subjects'\nimport {Link} from 'react-router-dom';\nconst UserTableListing = (props) => {\n  const [hours, setHours] = useState([]);\n  const getHours = async (username) => {\n    const res = await axios_instance.get(`/user/${username}/tutoring_history?hours=true`)\n    return res.data;\n  }\n\n  useEffect(() => {\n    if (props.username) {\n      getHours(props.username)\n        .then((res) => {\n          const hoursFormatted = [];\n          for(const subject in res){\n            hoursFormatted.push(<div>{subject} : {res[subject]}</div>)\n          }\n          return hoursFormatted;\n        })\n        .then((res)=>{\n          setHours(res);\n        })\n    }\n    else {\n      console.log(\"NO USER FOUND\")\n    }\n  }, [])\n\n  return (\n \n      <tr className=\"userListing\">\n        <td>{props.full_name}</td>\n        <td><Link to={`/user/${props.username}`}>{props.username}</Link></td>\n        <td>{props.email}</td>\n        <td>{props.us_phone_number}</td>\n        <td>{props.roles}</td>\n        <td>{props.tutor_subjects && props.tutor_subjects.length !== 0 ? props.tutor_subjects.join(\", \") : \"N/A\"}</td>\n        <td>{props.tutor_subjects && props.problem_subjects.length !== 0 ? props.problem_subjects : \"N/A\"}</td>\n        <td>{hours}</td>\n      </tr>\n\n  );\n}\n\n\nexport default UserTableListing;","\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport {\n  Link\n} from \"react-router-dom\";\nimport ReactPaginate from 'react-paginate'\nimport { Form,Row} from 'react-bootstrap'\nimport UserTableListing from './UserTableListing'\nimport UserSessions from './UserSessions'\nimport Filters from './Filters'\n//ensure that start and end date are after each other in edit/sess create\n//allow deletion of profiles\n//auto delete if not 'is active' after a certain time period?\n//How to verify session happened? \n\nconst AdminPortal = () => {\n  //What if only a few head admins could make admin accs, only thru the admin portal?\n  const [users, setUsers] = useState({\n    userList: [],\n    displayed: [],\n    filtered: [],\n  });\n\n  const [offset, setOffset] = useState(0);\n  const perPage = 10;\n  let pageCount = Math.ceil(users.filtered.length) / perPage;\n  const [mode, setMode] = useState(\"user\")\n\n  const handlePageClick = (e) => {\n    let selected = e.selected;\n    let offset = Math.ceil(selected * perPage);\n    setOffset(offset);\n  };\n\n  const setModeFilter = (e) => {\n    setMode(e.target.value);\n  }\n\n  useEffect(() => {\n    setUsers({ ...users, displayed: offset + perPage >= users.filtered.length ? users.filtered.slice(offset, users.filtered.length) : users.filtered.slice(offset, offset + perPage) })\n  }, [offset])\n\n  useEffect(() => {\n    axios.get('http://127.0.0.1:5000/user')\n      .then((res) => {\n        //Turn this whole user thing into a hook, consolidate it and Dashboard\n        setUsers({ userList: res.data, filtered: res.data, displayed: res.data });\n        return res.data;\n      })\n  }, [])\n\n\n\n  //,aybe go back thru checkboxes and automate their creation with an array of sorts, so you don't have to copy-paste another one every time a new subject is added\n  return (<div>\n    <h1>Admin Portal</h1>\n    <Link to=\"/admin/subjects\" >Subjects</Link>\n    <Row>\n      <Form.Group className=\"radios\">\n        <Form.Check\n          inline\n          value=\"user\"\n          name=\"setModeFilter\"\n          label=\"User View\"\n          type=\"radio\"\n          id=\"mode\"\n          checked={(mode == \"user\")}\n          onClick={setModeFilter}\n        />\n        <Form.Check\n          inline\n          value=\"session\"\n          name=\"setModeFilter\"\n          label=\"Session View\"\n          type=\"radio\"\n          id=\"mode\"\n          onClick={setModeFilter}\n        />\n      </Form.Group>\n    </Row>\n    {mode == \"user\" && <Filters users={users} setUsers={setUsers} offset={offset} pageCount={pageCount} perPage={perPage} mode={mode} setMode={setMode} />}\n    {mode == \"user\" ? users.displayed.length === 0 ? <span className=\"flavor-text greyed_out\">No Matching Users</span> :\n      <div>\n        <table>\n          <thead>\n            <th>Full Name</th>\n            <th>Username</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Roles</th>\n            <th>Tutor's Subjects</th>\n            <th>Problem Subjects</th>\n            <th>Hours</th>\n          </thead>\n          <tbody>\n            {users.displayed.map((user) => {\n              return (\n                <UserTableListing\n                  key={user._id.$oid}\n                  full_name={user.full_name}\n                  username={user.username}\n                  email={user.email}\n                  us_phone_number={user.us_phone_number}\n                  roles={user.roles}\n                  tutor_subjects={user.tutor_subjects}\n                  problem_subjects={user.problem_subjects}\n                />\n              )\n            })}\n          </tbody>\n        </table>\n        <ReactPaginate\n          pageCount={pageCount}\n          pageRangeDisplayed={5}\n          marginPagesDisplayed={5}\n          onPageChange={handlePageClick}\n          containerClassName={'pagination'}\n          subContainerClassName={'pages pagination'}\n          activeClassName={'active'}\n          previousLabel={'previous'}\n          nextLabel={'next'}\n          breakLabel={'...'}\n        />\n\n\n      </div> :\n      <UserSessions perPage={5} />}\n  </div>\n\n  )\n}\n\n\n\n\n\nexport default AdminPortal;","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nconst Errors = (props) => {\nconsole.log(props.error)\n    const determineRendered = () => {\n        switch (props.error) {\n            case 401:\n                return (\n                <div>\n                    <h1>401</h1>\n                    <h2>You do not have access to this page</h2>\n                    <Link to=\"/\">Home</Link>\n                </div>);\n            case 404: \n                return (\n                <div>\n                    <h1>404</h1>\n                    <h2>The page was not found.</h2>\n                    <Link to=\"/\">Home</Link>\n                </div>)\n        }\n    }\n    return (\n        <div>\n            {determineRendered()}\n        </div>\n    )\n}\n\n\nexport default Errors;","import React, { useState, useEffect } from 'react';\nimport { Form, FormControl, Button } from 'react-bootstrap'\nimport { axios_instance } from '../index'\n\nconst CreateSubject = () => {\n    const [subjects, setSubjects] = useState([]);\n    const [errors, setErrors] = useState([]);\n\n    const createSubject = (e) => {\n        e.preventDefault()\n        const config = {\n            xhrFields: {\n                withCredentials: true\n            },\n            crossDomain: true,\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        }\n        axios_instance.post(\"http://127.0.0.1:5000/subjects/new\", { 'subject': e.target.subject.value }, config)\n            .then((res) => {\n                e.target.subject.value = \"\"\n                setErrors('')\n                setSubjects([...subjects, res.data])\n            })\n            .catch((err) => {\n                setErrors(\"An error occurred processing your request.\")\n            })\n    }\n\n    const deleteSubject = (id) => {\n        axios_instance.post(`http://127.0.0.1:5000/subjects/delete/${id}`)\n        .then(()=>{\n            const newSubjects = subjects.filter((subject)=>subject._id.$oid !== id);\n            setSubjects(newSubjects);\n        })\n        .catch((err)=>{\n            console.log(err)\n            setErrors('Error occurred while deleting')\n        })\n    }\n    useEffect(() => {\n        axios_instance.get(\"http://127.0.0.1:5000/subjects\")\n            .then((res) => {\n                setSubjects(res.data);\n            })\n    }, [])\n\n    return (\n        <div>\n            <h1>Subjects</h1>\n            <h3>Create Subject</h3>\n            {errors}\n            <Form className=\"form-comp\" onSubmit={createSubject}>\n                <Form.Label>New Subject</Form.Label>\n                <FormControl type=\"text\" name=\"subject\" />\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n\n            <h3>Current Subjects</h3>\n            <div className=\"subjects\">\n                {subjects.map((element) => {\n\n                    return (<div className=\"subject\" key={element._id.$oid}>\n                        <p>{element.subject}</p>\n                        <a className=\"delete-link\" onClick={()=>deleteSubject(element._id.$oid)}>Delete</a>\n                    </div>)\n                }\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default CreateSubject;","import  {Switch, Route} from 'react-router-dom';\nimport React from 'react';\nimport CreateSubject from './Components/CreateSubject';\nimport AdminPortal from './Components/AdminPortal';\n\n\nconst AdminRouter = () => {\n    return (\n    <Switch>\n     <Route path=\"/admin/subjects\" component={CreateSubject}/>\n     <Route path=\"/admin/portal\" component={AdminPortal}/>\n </Switch>)\n}\n\nexport default AdminRouter;","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport CreateSessionForm from \"./CreateSessionForm\";\nimport Dashboard from \"./Dashboard\";\nimport HomePage from \"./Homepage\";\nimport LoginForm from \"./LoginForm\";\nimport NavBar from \"./NavBar\";\nimport Profile from \"./Profile\";\nimport SignUpForm from \"./SignUpForm\";\nimport EditUser from './EditUser'\nimport jwt from 'jsonwebtoken';\nimport EditSessionForm from \"./EditSession\";\nimport Chat from \"./Chat\"\nimport EmailRegistration from \"./EmailRegistration\";\nimport PasswordReset from \"./PasswordReset\";\nimport AdminPortal from \"./AdminPortal\";\nimport Errors from \"./Errors\"\nimport AdminRouter from \"../AdminRouter\";\nimport {verifyJWT} from \"../utility\"\n\nconst AppRouter = () => {\n  const jwt = verifyJWT();\n  return (\n    <BrowserRouter>\n      <div>\n        <NavBar />\n        <Switch>\n          <Route path=\"/\" component={HomePage} exact />\n          <Route path=\"/finalize_registration\" component={EmailRegistration} exact />\n          <Route exact path=\"/reset_password\" component={PasswordReset} />\n          <Route path=\"/sign_up\" component={SignUpForm} exact />\n          <Route path=\"/sign_in\" component={LoginForm} exact />\n          <Route path=\"/dashboard\" exact>\n            {jwt ? <Dashboard /> : <Errors error={401} />}\n          </Route>\n          <Route path=\"/user/create_session\" exact>\n            {jwt ? <CreateSessionForm /> : <Errors error={401} />}\n          </Route>\n          <Route exact path=\"/user/sessions/:session/edit\" component={EditSessionForm} />\n          <Route exact path=\"/user/:username\" render={({ match }) => {\n            return (\n              <div>\n                {jwt ? <Profile  /> : <Errors error={401} />}\n              </div>\n            )\n          }} />\n          <Route exact path=\"/user/:username/edit\" render={({ match }) => {\n            return (\n              <div>\n                {jwt && match.params.username == jwt.username || jwt.rls.includes('admin') ? <EditUser /> : <Errors error={401} />}\n              </div>\n            )\n          }} />\n          <Route exact path=\"/user/:username/chat\" render={({ match }) => {\n            return (\n              <div>\n                {jwt && match.params.username == jwt.username || jwt.rls.includes('admin') ? <Chat /> : <Errors error={401} />}\n              </div>\n            )\n          }} />\n          <Route path=\"/admin\" render={({ match }) => {\n            return (\n              <div>\n              {jwt && jwt.rls.includes('admin') ? <AdminRouter /> : <Errors error={401} />}\n              </div>\n            )\n            }}/>\n          <Route>\n            <Errors error={404} />\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default AppRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './component_styling/main.scss'\nimport axios from 'axios'\nimport AppRouter from './Components/Router'\nimport {io} from 'socket.io-client'\nexport const axios_instance = axios.create({\n  baseURL: 'http://127.0.0.1:5000'\n});\n\nconst socket = io.connect(\"http://127.0.0.1:5000\");\n\naxios_instance.interceptors.request.use(\nfunction(config) {\n  const token = localStorage.getItem(\"token\"); \n  if (token) {\n    config.headers[\"Authorization\"] = 'Bearer ' + token;\n  }\n  return config;\n},\nfunction(error) {\n  return Promise.reject(error);\n}\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppRouter />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://it.ly/CRA-vitals\nreportWebVitals();\nexport default socket;\n"],"sourceRoot":""}